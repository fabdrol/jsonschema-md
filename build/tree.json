{
  "/self": {
    "type": "string",
    "description": "This holds the key (MMSI or other unique ID) of this vessel, the actual data is in the vessels array."
  },
  "/vessels": {
    "type": "object",
    "description": "A wrapper object for vessel objects, each describing vessels in range, including this vessel.",
    "patternProperties": {
      "(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$": {
        "description": "This regex pattern is used for validation of an MMSI or Signal K UUID identifier for the vessel. Examples: urn:mrn:imo:mmsi:230099999 urn:mrn:signalk:uuid:c0d79334-4e25-4245-8892-54e8ccc8021d",
        "$ref": "vessel.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/vessel.json#",
    "description": "An object describing an individual vessel. It should be an object in vessels, named using MMSI or a UUID",
    "title": "vessel",
    "anyOf": [
      {
        "required": [
          "mmsi"
        ]
      },
      {
        "required": [
          "url"
        ]
      },
      {
        "required": [
          "uuid"
        ]
      }
    ],
    "properties": {
      "url": {
        "description": "URL based identity of the vessel, if available.",
        "$ref": "definitions.json#/definitions/url"
      },
      "mmsi": {
        "description": "MMSI number of the vessel, if available.",
        "$ref": "definitions.json#/definitions/mmsi"
      },
      "uuid": {
        "description": "A unique Signal K flavoured maritime resource identifier, assigned by the server.",
        "$ref": "definitions.json#/definitions/uuid",
        "example": "urn:mrn:signalk:uuid:b7590868-1d62-47d9-989c-32321b349fb9"
      },
      "name": {
        "type": "string",
        "description": "The common name of the vessel"
      },
      "flag": {
        "type": "string",
        "description": "The country of ship registration, or flag state of the vessel",
        "example": "NZ"
      },
      "port": {
        "type": "string",
        "description": "The home port of the vessel",
        "example": "Nelson"
      },
      "registrations": {
        "type": "object",
        "description": "The various registrations of the vessel.",
        "example": "eg for a New Zealand Part B recreational vessel: 'NZ654'",
        "properties": {
          "imo": {
            "type": "string",
            "description": "The IMO number of the vessel.",
            "pattern": "^IMO [0-9]{7,7}$",
            "example": "IMO 9074729",
            "maxLength": 11,
            "minLength": 11
          },
          "national": {
            "type": "object",
            "description": "The national registration number of the vessel.",
            "patternProperties": {
              "(^[A-Za-z0-9_-]+$)": {
                "description": "This regex pattern is used for validating the identifier for the registration",
                "properties": {
                  "country": {
                    "type": "string",
                    "description": "The ISO 3166-2 country code.",
                    "example": "NZ",
                    "maxLength": 2,
                    "minLength": 2
                  },
                  "registration": {
                    "type": "string",
                    "description": "The registration code",
                    "example": "NZ654"
                  },
                  "description": {
                    "type": "string",
                    "description": "The registration description",
                    "example": "New Zealand Part B recreational vessel"
                  }
                }
              }
            }
          },
          "local": {
            "type": "object",
            "description": "A local or state registration number of the vessel.",
            "patternProperties": {
              "(^[A-Za-z0-9_-]+$)": {
                "description": "This regex pattern is used for validating the identifier for the registration",
                "properties": {
                  "registration": {
                    "type": "string",
                    "description": "The registration code",
                    "example": "NZCG-2345"
                  },
                  "description": {
                    "type": "string",
                    "description": "The registration description",
                    "example": "Nelson Coast Guard Membership"
                  }
                }
              }
            }
          },
          "other": {
            "type": "object",
            "description": "Other registration or permits for the vessel.",
            "patternProperties": {
              "(^[A-Za-z0-9_-]+$)": {
                "description": "This regex pattern is used for validating the identifier for the registration",
                "properties": {
                  "registration": {
                    "type": "string",
                    "description": "The registration code",
                    "example": "DOC-2345"
                  },
                  "description": {
                    "type": "string",
                    "description": "The registration description",
                    "example": "Tasmanian National Parks Access Permit 2015"
                  }
                }
              }
            }
          }
        }
      },
      "communication": {
        "description": "Communication data",
        "$ref": "groups/communication.json#"
      },
      "environment": {
        "description": "Environmental data",
        "$ref": "groups/environment.json#"
      },
      "navigation": {
        "description": "Navigation data",
        "$ref": "groups/navigation.json#"
      },
      "propulsion": {
        "type": "object",
        "title": "propulsion",
        "description": "Engine data",
        "$ref": "groups/propulsion.json#"
      },
      "electrical": {
        "description": "Electrical data",
        "$ref": "groups/electrical.json#"
      },
      "notifications": {
        "type": "object",
        "title": "notifications",
        "description": "Notifications currently raised",
        "properties": {
          "mob": {
            "description": "Man overboard",
            "$ref": "groups/notifications.json#"
          },
          "fire": {
            "description": "Fire onboard",
            "$ref": "groups/notifications.json#"
          },
          "sinking": {
            "description": "Vessel is sinking",
            "$ref": "groups/notifications.json#"
          },
          "flooding": {
            "description": "Vessel is flooding",
            "$ref": "groups/notifications.json#"
          },
          "collision": {
            "description": "In collision with another vessel or object",
            "$ref": "groups/notifications.json#"
          },
          "grounding": {
            "description": "Vessel grounding",
            "$ref": "groups/notifications.json#"
          },
          "listing": {
            "description": "Vessel is listing",
            "$ref": "groups/notifications.json#"
          },
          "adrift": {
            "description": "Vessel is adrift",
            "$ref": "groups/notifications.json#"
          },
          "piracy": {
            "description": "Under attack or danger from pirates",
            "$ref": "groups/notifications.json#"
          },
          "abandon": {
            "description": "Abandon ship",
            "$ref": "groups/notifications.json#"
          }
        },
        "patternProperties": {
          "(^[A-Za-z0-9-]+$)": {
            "description": "This regex pattern is used for validation of the path of the alarm",
            "$ref": "groups/notifications.json#"
          }
        }
      },
      "steering": {
        "description": "Vessel steering data",
        "$ref": "groups/steering.json#"
      },
      "tanks": {
        "$ref": "groups/tanks.json#"
      },
      "design": {
        "description": "Design data of this vessel",
        "$ref": "groups/design.json#"
      },
      "sails": {
        "description": "Sails data",
        "$ref": "groups/sails.json#"
      },
      "sensors": {
        "type": "object",
        "title": "sensors",
        "description": "Sensors, their state, and data.",
        "patternProperties": {
          "(^[A-Za-z0-9]+$)": {
            "description": "This regex pattern is used for validation UUID identifier for the sensor",
            "$ref": "groups/sensors.json#"
          }
        }
      },
      "performance": {
        "description": "Performance data",
        "$ref": "groups/performance.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/url": {
    "type": "string",
    "description": "A location of a resource, potentially relative. For hierarchical schemes (like http), applications must resolve relative URIs (e.g. './v1/api/'). Implementations should support the following schemes: http:, https:, mailto:, tel:, and ws:."
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/mmsi": {
    "type": "string",
    "description": "Maritime Mobile Service Identity (MMSI). Has to be 9 digits. See http://en.wikipedia.org/wiki/Maritime_Mobile_Service_Identity for information.",
    "pattern": "^[2-7][0-9]{8,8}$",
    "maxLength": 9,
    "minLength": 9
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/uuid": {
    "type": "string",
    "description": "A unique Signal K flavoured maritime resource identifier (MRN). A MRN is a form of URN, following a specific format: urn:mrn:<issueing authority>:<id type>:<id>. In case of a Signal K uuid, that looks like this: urn:mrn:signalk:uuid:<uuid>, where Signal K is the issuing authority and UUID (v4) the ID type.",
    "pattern": "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
    "example": "urn:mrn:signalk:uuid:b7590868-1d62-47d9-989c-32321b349fb9"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/name": {
    "type": "string",
    "description": "The common name of the vessel"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/flag": {
    "type": "string",
    "description": "The country of ship registration, or flag state of the vessel",
    "example": "NZ"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/port": {
    "type": "string",
    "description": "The home port of the vessel",
    "example": "Nelson"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations": {
    "type": "object",
    "description": "The various registrations of the vessel.",
    "example": "eg for a New Zealand Part B recreational vessel: 'NZ654'",
    "properties": {
      "imo": {
        "type": "string",
        "description": "The IMO number of the vessel.",
        "pattern": "^IMO [0-9]{7,7}$",
        "example": "IMO 9074729",
        "maxLength": 11,
        "minLength": 11
      },
      "national": {
        "type": "object",
        "description": "The national registration number of the vessel.",
        "patternProperties": {
          "(^[A-Za-z0-9_-]+$)": {
            "description": "This regex pattern is used for validating the identifier for the registration",
            "properties": {
              "country": {
                "type": "string",
                "description": "The ISO 3166-2 country code.",
                "example": "NZ",
                "maxLength": 2,
                "minLength": 2
              },
              "registration": {
                "type": "string",
                "description": "The registration code",
                "example": "NZ654"
              },
              "description": {
                "type": "string",
                "description": "The registration description",
                "example": "New Zealand Part B recreational vessel"
              }
            }
          }
        }
      },
      "local": {
        "type": "object",
        "description": "A local or state registration number of the vessel.",
        "patternProperties": {
          "(^[A-Za-z0-9_-]+$)": {
            "description": "This regex pattern is used for validating the identifier for the registration",
            "properties": {
              "registration": {
                "type": "string",
                "description": "The registration code",
                "example": "NZCG-2345"
              },
              "description": {
                "type": "string",
                "description": "The registration description",
                "example": "Nelson Coast Guard Membership"
              }
            }
          }
        }
      },
      "other": {
        "type": "object",
        "description": "Other registration or permits for the vessel.",
        "patternProperties": {
          "(^[A-Za-z0-9_-]+$)": {
            "description": "This regex pattern is used for validating the identifier for the registration",
            "properties": {
              "registration": {
                "type": "string",
                "description": "The registration code",
                "example": "DOC-2345"
              },
              "description": {
                "type": "string",
                "description": "The registration description",
                "example": "Tasmanian National Parks Access Permit 2015"
              }
            }
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/imo": {
    "type": "string",
    "description": "The IMO number of the vessel.",
    "pattern": "^IMO [0-9]{7,7}$",
    "example": "IMO 9074729",
    "maxLength": 11,
    "minLength": 11
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/national": {
    "type": "object",
    "description": "The national registration number of the vessel.",
    "patternProperties": {
      "(^[A-Za-z0-9_-]+$)": {
        "description": "This regex pattern is used for validating the identifier for the registration",
        "properties": {
          "country": {
            "type": "string",
            "description": "The ISO 3166-2 country code.",
            "example": "NZ",
            "maxLength": 2,
            "minLength": 2
          },
          "registration": {
            "type": "string",
            "description": "The registration code",
            "example": "NZ654"
          },
          "description": {
            "type": "string",
            "description": "The registration description",
            "example": "New Zealand Part B recreational vessel"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/national/(^[A-Za-z0-9_-]+$)": {
    "description": "This regex pattern is used for validating the identifier for the registration",
    "properties": {
      "country": {
        "type": "string",
        "description": "The ISO 3166-2 country code.",
        "example": "NZ",
        "maxLength": 2,
        "minLength": 2
      },
      "registration": {
        "type": "string",
        "description": "The registration code",
        "example": "NZ654"
      },
      "description": {
        "type": "string",
        "description": "The registration description",
        "example": "New Zealand Part B recreational vessel"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/national/(^[A-Za-z0-9_-]+$)/country": {
    "type": "string",
    "description": "The ISO 3166-2 country code.",
    "example": "NZ",
    "maxLength": 2,
    "minLength": 2
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/national/(^[A-Za-z0-9_-]+$)/registration": {
    "type": "string",
    "description": "The registration code",
    "example": "NZ654"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/national/(^[A-Za-z0-9_-]+$)/description": {
    "type": "string",
    "description": "The registration description",
    "example": "New Zealand Part B recreational vessel"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/local": {
    "type": "object",
    "description": "A local or state registration number of the vessel.",
    "patternProperties": {
      "(^[A-Za-z0-9_-]+$)": {
        "description": "This regex pattern is used for validating the identifier for the registration",
        "properties": {
          "registration": {
            "type": "string",
            "description": "The registration code",
            "example": "NZCG-2345"
          },
          "description": {
            "type": "string",
            "description": "The registration description",
            "example": "Nelson Coast Guard Membership"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/local/(^[A-Za-z0-9_-]+$)": {
    "description": "This regex pattern is used for validating the identifier for the registration",
    "properties": {
      "registration": {
        "type": "string",
        "description": "The registration code",
        "example": "NZCG-2345"
      },
      "description": {
        "type": "string",
        "description": "The registration description",
        "example": "Nelson Coast Guard Membership"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/local/(^[A-Za-z0-9_-]+$)/registration": {
    "type": "string",
    "description": "The registration code",
    "example": "NZCG-2345"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/local/(^[A-Za-z0-9_-]+$)/description": {
    "type": "string",
    "description": "The registration description",
    "example": "Nelson Coast Guard Membership"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/other": {
    "type": "object",
    "description": "Other registration or permits for the vessel.",
    "patternProperties": {
      "(^[A-Za-z0-9_-]+$)": {
        "description": "This regex pattern is used for validating the identifier for the registration",
        "properties": {
          "registration": {
            "type": "string",
            "description": "The registration code",
            "example": "DOC-2345"
          },
          "description": {
            "type": "string",
            "description": "The registration description",
            "example": "Tasmanian National Parks Access Permit 2015"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/other/(^[A-Za-z0-9_-]+$)": {
    "description": "This regex pattern is used for validating the identifier for the registration",
    "properties": {
      "registration": {
        "type": "string",
        "description": "The registration code",
        "example": "DOC-2345"
      },
      "description": {
        "type": "string",
        "description": "The registration description",
        "example": "Tasmanian National Parks Access Permit 2015"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/other/(^[A-Za-z0-9_-]+$)/registration": {
    "type": "string",
    "description": "The registration code",
    "example": "DOC-2345"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/registrations/other/(^[A-Za-z0-9_-]+$)/description": {
    "type": "string",
    "description": "The registration description",
    "example": "Tasmanian National Parks Access Permit 2015"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/communication.json#",
    "description": "Schema describing the communication child-object of a Vessel.",
    "title": "communication",
    "properties": {
      "callsignVhf": {
        "type": "string",
        "description": "Callsign for VHF communication",
        "example": "ZL1234"
      },
      "callsignHf": {
        "type": "string",
        "description": "Callsign for HF communication",
        "example": "ZL3RTH"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of skipper",
        "example": "+64xxxxxx"
      },
      "emailHf": {
        "type": "string",
        "description": "Email address to be used for HF email (Winmail, Airmail, Sailmail)",
        "example": "motu@xxx.co.nz"
      },
      "email": {
        "type": "string",
        "description": "Regular email for the skipper",
        "example": "robert@xxx.co.nz"
      },
      "satPhoneNumber": {
        "type": "string",
        "description": "Satellite phone number for vessel.",
        "example": "+64xxxxxx"
      },
      "skipperName": {
        "type": "string",
        "description": "Full name of the skipper of the vessel.",
        "example": "Fabian Tollenaar"
      },
      "crewNames": {
        "type": "array",
        "description": "Array with the names of the crew",
        "items": [
          {
            "type": "string",
            "description": "Name of a crew member of the vessel.",
            "example": "Catherine"
          }
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/callsignVhf": {
    "type": "string",
    "description": "Callsign for VHF communication",
    "example": "ZL1234"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/callsignHf": {
    "type": "string",
    "description": "Callsign for HF communication",
    "example": "ZL3RTH"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/phoneNumber": {
    "type": "string",
    "description": "Phone number of skipper",
    "example": "+64xxxxxx"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/emailHf": {
    "type": "string",
    "description": "Email address to be used for HF email (Winmail, Airmail, Sailmail)",
    "example": "motu@xxx.co.nz"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/email": {
    "type": "string",
    "description": "Regular email for the skipper",
    "example": "robert@xxx.co.nz"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/satPhoneNumber": {
    "type": "string",
    "description": "Satellite phone number for vessel.",
    "example": "+64xxxxxx"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/skipperName": {
    "type": "string",
    "description": "Full name of the skipper of the vessel.",
    "example": "Fabian Tollenaar"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/communication/crewNames": {
    "type": "array",
    "description": "Array with the names of the crew",
    "items": [
      {
        "type": "string",
        "description": "Name of a crew member of the vessel.",
        "example": "Catherine"
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/environment.json#",
    "description": "Schema describing the environmental child-object of a Vessel.",
    "title": "environment",
    "definitions": {
      "objectWithTemperature": {
        "type": "object",
        "properties": {
          "temperature": {
            "description": "Temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          }
        }
      }
    },
    "properties": {
      "outside": {
        "type": "object",
        "properties": {
          "temperature": {
            "description": "Current outside air temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "dewPointTemperature": {
            "description": "Current outside dew point temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "apparentWindChillTemperature": {
            "description": "Current outside apparent wind chill temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "theoreticalWindChillTemperature": {
            "description": "Current outside theoretical wind chill temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "heatIndexTemperature": {
            "description": "Current outside heat index temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "pressure": {
            "description": "Current outside air ambient pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          },
          "humidity": {
            "description": "Current outside air relative humidity",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          }
        }
      },
      "inside": {
        "type": "object",
        "properties": {
          "temperature": {
            "description": "Current inside air temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "humidity": {
            "description": "Current inside air relative humidity",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "engineRoom": {
            "$ref": "#/definitions/objectWithTemperature"
          },
          "mainCabin": {
            "$ref": "#/definitions/objectWithTemperature"
          },
          "refrigerator": {
            "$ref": "#/definitions/objectWithTemperature"
          },
          "freezer": {
            "$ref": "#/definitions/objectWithTemperature"
          },
          "heating": {
            "$ref": "#/definitions/objectWithTemperature"
          }
        }
      },
      "water": {
        "type": "object",
        "properties": {
          "temperature": {
            "description": "Current water temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "salinity": {
            "description": "Water salinity",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "liveWell": {
            "$ref": "#/definitions/objectWithTemperature"
          },
          "baitWell": {
            "$ref": "#/definitions/objectWithTemperature"
          }
        }
      },
      "depth": {
        "title": "depth",
        "type": "object",
        "description": "Depth related data",
        "properties": {
          "belowKeel": {
            "description": "Depth below keel",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "belowTransducer": {
            "description": "Depth below Transducer",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "belowSurface": {
            "description": "Depth from surface",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "transducerToKeel": {
            "description": "Depth from the transducer to the bottom of the keel",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "surfaceToTransducer": {
            "description": "Depth transducer is below the water",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          }
        }
      },
      "current": {
        "type": "object",
        "title": "current",
        "description": "Direction and strength of current affecting the vessel",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "properties": {
              "drift": {
                "type": "number",
                "description": "The speed component of the water current vector",
                "example": 3.12,
                "units": "m/s"
              },
              "setTrue": {
                "type": "number",
                "description": "The direction component of the water current vector referenced to true (geographic) north",
                "example": 123.45,
                "units": "rad"
              },
              "setMagnetic": {
                "type": "number",
                "description": "The direction component of the water current vector referenced to magnetic north",
                "example": 131.22,
                "units": "rad"
              }
            }
          }
        ]
      },
      "tide": {
        "type": "object",
        "title": "tide",
        "description": "Tide data",
        "properties": {
          "heightHigh": {
            "description": "Next high tide",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "heightNow": {
            "description": "The current tide height",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "heightLow": {
            "description": "The next low tide height",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "timeLow": {
            "description": "Time of the next low tide in UTC",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "timeHigh": {
            "description": "Time of next high tide in UTC",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "heave": {
        "description": "Vertical movement of the vessel due to waves",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "wind": {
        "type": "object",
        "title": "wind",
        "description": "Wind data.",
        "properties": {
          "angleApparent": {
            "description": "Apparent wind angle, negative to port",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "angleTrueGround": {
            "description": "True wind angle based on speed over ground, negative to port",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "angleTrueWater": {
            "description": "True wind angle based on speed through water, negative to port",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "directionChangeAlarm": {
            "description": "The angle the wind needs to shift to raise an alarm",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "directionTrue": {
            "description": "The wind direction relative to true north",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "directionMagnetic": {
            "description": "The wind direction relative to magnetic north",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "speedTrue": {
            "description": "Wind speed over water (as calculated from speedApparent and vessel's speed through water)",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m/s"
          },
          "speedOverGround": {
            "description": "Wind speed over ground (as calculated from speedApparent and vessel's speed over ground)",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m/s"
          },
          "speedApparent": {
            "description": "Apparent wind speed",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m/s"
          }
        }
      },
      "time": {
        "type": "object",
        "description": "A time reference onboard.",
        "properties": {
          "millis": {
            "type": "number",
            "title": "Epoch time",
            "example": 1449648657735,
            "description": "Milliseconds since the UNIX epoch (1970-01-01 00:00:00)"
          },
          "timezone": {
            "type": "number",
            "title": "Timezone offset",
            "example": -400,
            "maximum": 1300,
            "minimum": -1300,
            "description": "Timezone offset in hours and minutes (-)hhmm"
          },
          "timestamp": {
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      },
      "mode": {
        "type": "object",
        "description": "Mode of the vessel based on the current conditions. Can be combined with navigation.state to control vessel signals eg switch to night mode for instrumentation and lights, or make sound signals for fog.",
        "properties": {
          "value": {
            "enum": [
              "day",
              "night",
              "restricted visibility"
            ]
          },
          "timestamp": {
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside": {
    "type": "object",
    "properties": {
      "temperature": {
        "description": "Current outside air temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "dewPointTemperature": {
        "description": "Current outside dew point temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "apparentWindChillTemperature": {
        "description": "Current outside apparent wind chill temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "theoreticalWindChillTemperature": {
        "description": "Current outside theoretical wind chill temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "heatIndexTemperature": {
        "description": "Current outside heat index temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "pressure": {
        "description": "Current outside air ambient pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      },
      "humidity": {
        "description": "Current outside air relative humidity",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/temperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/dewPointTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/apparentWindChillTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/theoreticalWindChillTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/heatIndexTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/pressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/outside/humidity": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/inside": {
    "type": "object",
    "properties": {
      "temperature": {
        "description": "Current inside air temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "humidity": {
        "description": "Current inside air relative humidity",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "engineRoom": {
        "$ref": "#/definitions/objectWithTemperature"
      },
      "mainCabin": {
        "$ref": "#/definitions/objectWithTemperature"
      },
      "refrigerator": {
        "$ref": "#/definitions/objectWithTemperature"
      },
      "freezer": {
        "$ref": "#/definitions/objectWithTemperature"
      },
      "heating": {
        "$ref": "#/definitions/objectWithTemperature"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/inside/temperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/inside/humidity": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/water": {
    "type": "object",
    "properties": {
      "temperature": {
        "description": "Current water temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "salinity": {
        "description": "Water salinity",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "liveWell": {
        "$ref": "#/definitions/objectWithTemperature"
      },
      "baitWell": {
        "$ref": "#/definitions/objectWithTemperature"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/water/temperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/water/salinity": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth": {
    "title": "depth",
    "type": "object",
    "description": "Depth related data",
    "properties": {
      "belowKeel": {
        "description": "Depth below keel",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "belowTransducer": {
        "description": "Depth below Transducer",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "belowSurface": {
        "description": "Depth from surface",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "transducerToKeel": {
        "description": "Depth from the transducer to the bottom of the keel",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "surfaceToTransducer": {
        "description": "Depth transducer is below the water",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth/belowKeel": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth/belowTransducer": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth/belowSurface": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth/transducerToKeel": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/depth/surfaceToTransducer": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/current": {
    "type": "object",
    "title": "current",
    "description": "Direction and strength of current affecting the vessel",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "properties": {
          "drift": {
            "type": "number",
            "description": "The speed component of the water current vector",
            "example": 3.12,
            "units": "m/s"
          },
          "setTrue": {
            "type": "number",
            "description": "The direction component of the water current vector referenced to true (geographic) north",
            "example": 123.45,
            "units": "rad"
          },
          "setMagnetic": {
            "type": "number",
            "description": "The direction component of the water current vector referenced to magnetic north",
            "example": 131.22,
            "units": "rad"
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide": {
    "type": "object",
    "title": "tide",
    "description": "Tide data",
    "properties": {
      "heightHigh": {
        "description": "Next high tide",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "heightNow": {
        "description": "The current tide height",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "heightLow": {
        "description": "The next low tide height",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "timeLow": {
        "description": "Time of the next low tide in UTC",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "timeHigh": {
        "description": "Time of next high tide in UTC",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide/heightHigh": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide/heightNow": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide/heightLow": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide/timeLow": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/tide/timeHigh": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/heave": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind": {
    "type": "object",
    "title": "wind",
    "description": "Wind data.",
    "properties": {
      "angleApparent": {
        "description": "Apparent wind angle, negative to port",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "angleTrueGround": {
        "description": "True wind angle based on speed over ground, negative to port",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "angleTrueWater": {
        "description": "True wind angle based on speed through water, negative to port",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "directionChangeAlarm": {
        "description": "The angle the wind needs to shift to raise an alarm",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "directionTrue": {
        "description": "The wind direction relative to true north",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "directionMagnetic": {
        "description": "The wind direction relative to magnetic north",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "speedTrue": {
        "description": "Wind speed over water (as calculated from speedApparent and vessel's speed through water)",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "speedOverGround": {
        "description": "Wind speed over ground (as calculated from speedApparent and vessel's speed over ground)",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "speedApparent": {
        "description": "Apparent wind speed",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/angleApparent": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/angleTrueGround": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/angleTrueWater": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/directionChangeAlarm": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/directionTrue": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/directionMagnetic": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/speedTrue": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/speedOverGround": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/wind/speedApparent": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time": {
    "type": "object",
    "description": "A time reference onboard.",
    "properties": {
      "millis": {
        "type": "number",
        "title": "Epoch time",
        "example": 1449648657735,
        "description": "Milliseconds since the UNIX epoch (1970-01-01 00:00:00)"
      },
      "timezone": {
        "type": "number",
        "title": "Timezone offset",
        "example": -400,
        "maximum": 1300,
        "minimum": -1300,
        "description": "Timezone offset in hours and minutes (-)hhmm"
      },
      "timestamp": {
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/millis": {
    "type": "number",
    "title": "Epoch time",
    "example": 1449648657735,
    "description": "Milliseconds since the UNIX epoch (1970-01-01 00:00:00)"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/timezone": {
    "type": "number",
    "title": "Timezone offset",
    "example": -400,
    "maximum": 1300,
    "minimum": -1300,
    "description": "Timezone offset in hours and minutes (-)hhmm"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/time/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode": {
    "type": "object",
    "description": "Mode of the vessel based on the current conditions. Can be combined with navigation.state to control vessel signals eg switch to night mode for instrumentation and lights, or make sound signals for fog.",
    "properties": {
      "value": {
        "enum": [
          "day",
          "night",
          "restricted visibility"
        ]
      },
      "timestamp": {
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/value": {
    "enum": [
      "day",
      "night",
      "restricted visibility"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/environment/mode/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/navigation.json#",
    "description": "Schema describing the navigation child-object of a Vessel.",
    "title": "navigation",
    "definitions": {
      "course": {
        "type": "object",
        "title": "Course",
        "description": "The currently active course (can be a route, or just a point one is navigating towards)",
        "properties": {
          "crossTrackError": {
            "description": "The distance from the vessel's present position to the closest point on a line (track) between previousPoint and nextPoint. A negative number indicates that the vessel is currently to the left of this line (and thus must steer right to compensate), a positive number means the vessel is to the right of the line (steer left to compensate).",
            "units": "m",
            "$ref": "../definitions.json#/definitions/numberValue"
          },
          "bearingTrackTrue": {
            "description": "The bearing of a line between previousPoint and nextPoint, relative to true north.",
            "units": "rad",
            "$ref": "../definitions.json#/definitions/numberValue"
          },
          "bearingTrackMagnetic": {
            "description": "The bearing of a line between previousPoint and nextPoint, relative to magnetic north.",
            "units": "rad",
            "$ref": "../definitions.json#/definitions/numberValue"
          },
          "activeRoute": {
            "type": "object",
            "properties": {
              "href": {
                "description": "A reference (URL) to the presently active route, in resources.",
                "example": "/resources/routes/urn:mrn:signalk:uuid:3dd34dcc-36bf-4d61-ba80-233799b25672",
                "type": "string"
              },
              "estimatedTimeOfArrival": {
                "$ref": "../definitions.json#/definitions/timestamp",
                "description": "The estimated time of arrival at the end of the current route"
              },
              "startTime": {
                "$ref": "../definitions.json#/definitions/timestamp",
                "description": "The time this route was activated"
              }
            }
          },
          "nextPoint": {
            "type": "object",
            "description": "The point on earth the vessel's presently navigating towards",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/commonValueFields"
              },
              {
                "properties": {
                  "type": {
                    "description": "The type of the next point (e.g. Waypoint, POI, Race Mark, etc)",
                    "type": "string"
                  },
                  "href": {
                    "description": "A reference (URL) to an object (under resources) this point is related to",
                    "type": "string"
                  },
                  "distance": {
                    "description": "The distance in meters between the vessel's present position and the nextPoint",
                    "units": "m",
                    "type": "number"
                  },
                  "bearingTrue": {
                    "description": "The bearing of a line between the vessel's current position and nextPoint, relative to true north",
                    "units": "rad",
                    "type": "number"
                  },
                  "bearingMagnetic": {
                    "description": "The bearing of a line between the vessel's current position and nextPoint, relative to magnetic north",
                    "units": "rad",
                    "type": "number"
                  },
                  "velocityMadeGood": {
                    "description": "The velocity component of the vessel towards the nextPoint",
                    "units": "m/s",
                    "type": "number"
                  },
                  "timeToGo": {
                    "description": "Time in seconds to reach nextPoint's perpendicular) with current speed & direction",
                    "units": "s",
                    "type": "number"
                  },
                  "position": {
                    "type": "object",
                    "description": "The position of nextPoint in two dimensions",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            ]
          },
          "previousPoint": {
            "type": "object",
            "description": "The point on earth the vessel's presently navigating from",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/commonValueFields"
              },
              {
                "properties": {
                  "type": {
                    "description": "The type of the previous point (e.g. Waypoint, POI, Race Mark, etc)",
                    "type": "string"
                  },
                  "href": {
                    "description": "A reference (URL) to an object (under resources) this point is related to",
                    "type": "string"
                  },
                  "distance": {
                    "description": "The distance in meters between previousPoint and the vessel's present position",
                    "units": "m",
                    "type": "number"
                  },
                  "position": {
                    "type": "object",
                    "description": "The position of lastPoint in two dimensions",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "properties": {
      "lights": {
        "type": "object",
        "title": "Navigation lights",
        "description": "Current state of the vessels navigation lights",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "off",
              "fault",
              "anchored",
              "sailing",
              "motoring",
              "towing < 200m",
              "towing > 200m",
              "pushing",
              "fishing",
              "fishing-hampered",
              "trawling",
              "trawling-shooting",
              "trawling-hauling",
              "pilotage",
              "not-under-way",
              "aground",
              "restricted manouverability",
              "restricted manouverability towing < 200m",
              "restricted manouverability towing > 200m",
              "restricted manouverability underwater operations",
              "constrained by draft",
              "mine clearance"
            ]
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "courseOverGroundMagnetic": {
        "description": "Course over ground (magnetic)",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "courseOverGroundTrue": {
        "description": "Course over ground (true)",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "courseRhumbline": {
        "description": "Course information computed with Rhumbline",
        "$ref": "#/definitions/course"
      },
      "courseGreatCircle": {
        "description": "Course information computed with Great Circle",
        "$ref": "#/definitions/course"
      },
      "racing": {
        "type": "object",
        "properties": {
          "startLineStb": {
            "waypoint": {
              "description": "UUID of waypoint for starboard start mark",
              "type": "string"
            }
          },
          "startLinePort": {
            "waypoint": {
              "description": "UUID of waypoint for port start mark",
              "type": "string"
            }
          },
          "distanceStartline": {
            "type": "number",
            "description": "The current distance to the start line",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          },
          "timeToStart": {
            "description": "Time left before start",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "timePortDown": {
            "description": "Time to arrive at the start line on port, turning downwind",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "timePortUp": {
            "description": "Time to arrive at the start line on port, turning upwind",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "timeStbdDown": {
            "description": "Time to arrive at the start line on starboard, turning downwind",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "timeStbdUp": {
            "description": "Time to arrive at the start line on starboard, turning upwind",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "distanceLayline": {
            "type": "number",
            "description": "The current distance to the layline",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m"
          }
        }
      },
      "magneticVariation": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "The magnetic variation (declination) at the current position",
        "units": "rad"
      },
      "magneticVariationAgeOfService": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Seconds since the 1st Jan 1970 that the variation calculation was made",
        "units": "s"
      },
      "destination": {
        "title": "destination",
        "description": "The intended destination of this trip",
        "type": "object",
        "properties": {
          "eta": {
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "waypoint": {
            "description": "UUID of destination waypoint",
            "type": "string"
          }
        }
      },
      "gnss": {
        "type": "object",
        "title": "gnss",
        "description": "Global satellite navigation meta information",
        "properties": {
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "methodQuality": {
            "type": "object",
            "description": "Quality of the satellite fix",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "no GPS",
                  "GNSS Fix",
                  "DGNSS fix",
                  "Precise GNSS",
                  "RTK fixed integer",
                  "RTK float",
                  "Estimated (DR) mode",
                  "Manual input",
                  "Simulator mode",
                  "Error"
                ]
              }
            }
          },
          "integrity": {
            "type": "object",
            "description": "Integrity of the satellite fix",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "no Integrity checking",
                  "Safe",
                  "Caution",
                  "Unsafe"
                ]
              }
            }
          },
          "satellites": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Number of satellites"
          },
          "antennaAltitude": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Altitude of antenna",
            "units": "m"
          },
          "horizontalDilution": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Horizontal Dilution of Precision"
          },
          "positionDilution": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Positional Dilution of Precision"
          },
          "geoidalSeparation": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Difference between WGS84 earth ellipsoid and mean sea level"
          },
          "differentialAge": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Age of DGPS data",
            "units": "s"
          },
          "differentialReference": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "ID of DGPS base station"
          }
        }
      },
      "headingMagnetic": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Current magnetic heading of the vessels",
        "units": "rad"
      },
      "headingTrue": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "The current true heading of the vessel",
        "units": "rad"
      },
      "position": {
        "description": "The position of the vessel in 3 dimensions",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "$ref": "../definitions.json#/definitions/position"
          }
        ]
      },
      "attitude": {
        "type": "object",
        "title": "Attitude",
        "description": "Vessel attitude: roll, pitch and yaw",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "properties": {
              "roll": {
                "type": "number",
                "description": "Vessel roll, +ve is list to starboard",
                "units": "rad"
              },
              "pitch": {
                "type": "number",
                "description": "Pitch, +ve is bow up",
                "units": "rad"
              },
              "yaw": {
                "type": "number",
                "description": "Yaw, +ve is heading change to starboard",
                "units": "rad"
              }
            }
          }
        ]
      },
      "rateOfTurn": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Rate of turn",
        "units": "rad/s"
      },
      "speedOverGround": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Vessel speed over ground",
        "units": "m/s"
      },
      "speedThroughWater": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Vessel speed through the water",
        "units": "m/s"
      },
      "log": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Log value",
        "units": "m"
      },
      "logTrip": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Trip log value",
        "units": "m"
      },
      "state": {
        "type": "object",
        "title": "state",
        "description": "Current navigational state of the vessel",
        "properties": {
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "value": {
            "type": "string",
            "enum": [
              "not under command",
              "anchored",
              "sailing",
              "motoring",
              "towing < 200m",
              "towing > 200m",
              "pushing",
              "fishing",
              "fishing-hampered",
              "trawling",
              "trawling-shooting",
              "trawling-hauling",
              "pilotage",
              "not-under-way",
              "aground",
              "restricted manouverability",
              "restricted manouverability towing < 200m",
              "restricted manouverability towing > 200m",
              "restricted manouverability underwater operations",
              "constrained by draft",
              "mine clearance",
              "not defined (example)"
            ]
          }
        }
      },
      "anchor": {
        "type": "object",
        "title": "anchor",
        "description": "The anchor data, for anchor watch etc",
        "properties": {
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "maxRadius": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Radius of anchor alarm boundary. The distance from anchor to the center of the boat",
            "units": "m"
          },
          "currentRadius": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Current distance to anchor",
            "units": "m"
          },
          "position": {
            "description": "The actual anchor position of the vessel in 3 dimensions, probably an estimate at best",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/commonValueFields"
              },
              {
                "$ref": "../definitions.json#/definitions/position"
              }
            ]
          }
        }
      },
      "datetime": {
        "type": "object",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "properties": {
              "value": {
                "type": "string",
                "description": "GNSS Time and Date in ISO8601 format",
                "exmple": "2015-12-05T13:11:59Z"
              },
              "gnssTimeSource": {
                "description": "Source of GNSS Date and Time",
                "enum": [
                  "GPS",
                  "GLONASS",
                  "Galileo",
                  "Beidou",
                  "IRNSS",
                  "Radio Signal",
                  "Internet",
                  "Local clock"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights": {
    "type": "object",
    "title": "Navigation lights",
    "description": "Current state of the vessels navigation lights",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "off",
          "fault",
          "anchored",
          "sailing",
          "motoring",
          "towing < 200m",
          "towing > 200m",
          "pushing",
          "fishing",
          "fishing-hampered",
          "trawling",
          "trawling-shooting",
          "trawling-hauling",
          "pilotage",
          "not-under-way",
          "aground",
          "restricted manouverability",
          "restricted manouverability towing < 200m",
          "restricted manouverability towing > 200m",
          "restricted manouverability underwater operations",
          "constrained by draft",
          "mine clearance"
        ]
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/value": {
    "type": "string",
    "enum": [
      "off",
      "fault",
      "anchored",
      "sailing",
      "motoring",
      "towing < 200m",
      "towing > 200m",
      "pushing",
      "fishing",
      "fishing-hampered",
      "trawling",
      "trawling-shooting",
      "trawling-hauling",
      "pilotage",
      "not-under-way",
      "aground",
      "restricted manouverability",
      "restricted manouverability towing < 200m",
      "restricted manouverability towing > 200m",
      "restricted manouverability underwater operations",
      "constrained by draft",
      "mine clearance"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/lights/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/courseOverGroundMagnetic": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/courseOverGroundTrue": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing": {
    "type": "object",
    "properties": {
      "startLineStb": {
        "waypoint": {
          "description": "UUID of waypoint for starboard start mark",
          "type": "string"
        }
      },
      "startLinePort": {
        "waypoint": {
          "description": "UUID of waypoint for port start mark",
          "type": "string"
        }
      },
      "distanceStartline": {
        "type": "number",
        "description": "The current distance to the start line",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      },
      "timeToStart": {
        "description": "Time left before start",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "timePortDown": {
        "description": "Time to arrive at the start line on port, turning downwind",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "timePortUp": {
        "description": "Time to arrive at the start line on port, turning upwind",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "timeStbdDown": {
        "description": "Time to arrive at the start line on starboard, turning downwind",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "timeStbdUp": {
        "description": "Time to arrive at the start line on starboard, turning upwind",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "distanceLayline": {
        "type": "number",
        "description": "The current distance to the layline",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/startLineStb": {
    "waypoint": {
      "description": "UUID of waypoint for starboard start mark",
      "type": "string"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/startLinePort": {
    "waypoint": {
      "description": "UUID of waypoint for port start mark",
      "type": "string"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/distanceStartline": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/timeToStart": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/timePortDown": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/timePortUp": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/timeStbdDown": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/timeStbdUp": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/racing/distanceLayline": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/magneticVariation": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/magneticVariationAgeOfService": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination": {
    "title": "destination",
    "description": "The intended destination of this trip",
    "type": "object",
    "properties": {
      "eta": {
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "waypoint": {
        "description": "UUID of destination waypoint",
        "type": "string"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/eta": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/destination/waypoint": {
    "description": "UUID of destination waypoint",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss": {
    "type": "object",
    "title": "gnss",
    "description": "Global satellite navigation meta information",
    "properties": {
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "methodQuality": {
        "type": "object",
        "description": "Quality of the satellite fix",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "no GPS",
              "GNSS Fix",
              "DGNSS fix",
              "Precise GNSS",
              "RTK fixed integer",
              "RTK float",
              "Estimated (DR) mode",
              "Manual input",
              "Simulator mode",
              "Error"
            ]
          }
        }
      },
      "integrity": {
        "type": "object",
        "description": "Integrity of the satellite fix",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "no Integrity checking",
              "Safe",
              "Caution",
              "Unsafe"
            ]
          }
        }
      },
      "satellites": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Number of satellites"
      },
      "antennaAltitude": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Altitude of antenna",
        "units": "m"
      },
      "horizontalDilution": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Horizontal Dilution of Precision"
      },
      "positionDilution": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Positional Dilution of Precision"
      },
      "geoidalSeparation": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Difference between WGS84 earth ellipsoid and mean sea level"
      },
      "differentialAge": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Age of DGPS data",
        "units": "s"
      },
      "differentialReference": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "ID of DGPS base station"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/methodQuality": {
    "type": "object",
    "description": "Quality of the satellite fix",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "no GPS",
          "GNSS Fix",
          "DGNSS fix",
          "Precise GNSS",
          "RTK fixed integer",
          "RTK float",
          "Estimated (DR) mode",
          "Manual input",
          "Simulator mode",
          "Error"
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/methodQuality/value": {
    "type": "string",
    "enum": [
      "no GPS",
      "GNSS Fix",
      "DGNSS fix",
      "Precise GNSS",
      "RTK fixed integer",
      "RTK float",
      "Estimated (DR) mode",
      "Manual input",
      "Simulator mode",
      "Error"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/integrity": {
    "type": "object",
    "description": "Integrity of the satellite fix",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "no Integrity checking",
          "Safe",
          "Caution",
          "Unsafe"
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/integrity/value": {
    "type": "string",
    "enum": [
      "no Integrity checking",
      "Safe",
      "Caution",
      "Unsafe"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/satellites": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/antennaAltitude": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/horizontalDilution": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/positionDilution": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/geoidalSeparation": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/differentialAge": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/gnss/differentialReference": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/headingMagnetic": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/headingTrue": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/position": {
    "description": "The position of the vessel in 3 dimensions",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "$ref": "../definitions.json#/definitions/position"
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/attitude": {
    "type": "object",
    "title": "Attitude",
    "description": "Vessel attitude: roll, pitch and yaw",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "properties": {
          "roll": {
            "type": "number",
            "description": "Vessel roll, +ve is list to starboard",
            "units": "rad"
          },
          "pitch": {
            "type": "number",
            "description": "Pitch, +ve is bow up",
            "units": "rad"
          },
          "yaw": {
            "type": "number",
            "description": "Yaw, +ve is heading change to starboard",
            "units": "rad"
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/rateOfTurn": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/speedOverGround": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/speedThroughWater": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/log": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/logTrip": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state": {
    "type": "object",
    "title": "state",
    "description": "Current navigational state of the vessel",
    "properties": {
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "value": {
        "type": "string",
        "enum": [
          "not under command",
          "anchored",
          "sailing",
          "motoring",
          "towing < 200m",
          "towing > 200m",
          "pushing",
          "fishing",
          "fishing-hampered",
          "trawling",
          "trawling-shooting",
          "trawling-hauling",
          "pilotage",
          "not-under-way",
          "aground",
          "restricted manouverability",
          "restricted manouverability towing < 200m",
          "restricted manouverability towing > 200m",
          "restricted manouverability underwater operations",
          "constrained by draft",
          "mine clearance",
          "not defined (example)"
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/state/value": {
    "type": "string",
    "enum": [
      "not under command",
      "anchored",
      "sailing",
      "motoring",
      "towing < 200m",
      "towing > 200m",
      "pushing",
      "fishing",
      "fishing-hampered",
      "trawling",
      "trawling-shooting",
      "trawling-hauling",
      "pilotage",
      "not-under-way",
      "aground",
      "restricted manouverability",
      "restricted manouverability towing < 200m",
      "restricted manouverability towing > 200m",
      "restricted manouverability underwater operations",
      "constrained by draft",
      "mine clearance",
      "not defined (example)"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor": {
    "type": "object",
    "title": "anchor",
    "description": "The anchor data, for anchor watch etc",
    "properties": {
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "maxRadius": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Radius of anchor alarm boundary. The distance from anchor to the center of the boat",
        "units": "m"
      },
      "currentRadius": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Current distance to anchor",
        "units": "m"
      },
      "position": {
        "description": "The actual anchor position of the vessel in 3 dimensions, probably an estimate at best",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "$ref": "../definitions.json#/definitions/position"
          }
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/maxRadius": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/currentRadius": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/anchor/position": {
    "description": "The actual anchor position of the vessel in 3 dimensions, probably an estimate at best",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "$ref": "../definitions.json#/definitions/position"
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/navigation/datetime": {
    "type": "object",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "string",
            "description": "GNSS Time and Date in ISO8601 format",
            "exmple": "2015-12-05T13:11:59Z"
          },
          "gnssTimeSource": {
            "description": "Source of GNSS Date and Time",
            "enum": [
              "GPS",
              "GLONASS",
              "Galileo",
              "Beidou",
              "IRNSS",
              "Radio Signal",
              "Internet",
              "Local clock"
            ]
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/propulsion.json#",
    "title": "propulsion",
    "description": "An engine, named by a unique name within this vessel",
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "description": "This regex pattern is used for validation of the identifier for the propulsion unit",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable label for the propulsion unit"
          },
          "state": {
            "type": "object",
            "description": "The current state of the engine",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/commonValueFields"
              },
              {
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "stopped",
                      "started",
                      "unusable"
                    ]
                  }
                }
              }
            ]
          },
          "revolutions": {
            "description": "Engine revolutions",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Hz"
          },
          "temperature": {
            "description": "Engine temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "oilTemperature": {
            "description": "Oil temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "oilPressure": {
            "description": "Oil pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          },
          "alternatorVoltage": {
            "description": "Alternator voltage",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "V"
          },
          "runTime": {
            "description": "Total running time for engine",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "s"
          },
          "coolantTemperature": {
            "description": "Coolant temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "coolantPressure": {
            "description": "Coolant pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          },
          "boostPressure": {
            "description": "Engine boost (turbo, supercharger) pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          },
          "engineLoad": {
            "description": "Engine load ratio, 1 is 100%",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "engineTorque": {
            "description": "Engine torque ratio, 1 is 100%",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "transmission": {
            "type": "object",
            "properties": {
              "gear": {
                "type": "object",
                "properties": {
                  "value": {
                    "enum": [
                      "Forward",
                      "Neutral",
                      "Reverse",
                      "Fault"
                    ]
                  }
                }
              },
              "gearRatio": {
                "description": "Gear ratio, Engine rotations per propeller shaft rotation",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "ratio"
              },
              "oilTemperature": {
                "description": "Oil temperature",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "K"
              },
              "oilPressure": {
                "description": "Oil pressure",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "Pa"
              }
            }
          },
          "drive": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "saildrive",
                  "shaft",
                  "outboard",
                  "jet",
                  "pod",
                  "other"
                ]
              },
              "trimState": {
                "description": "Trim/tilt state",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "ratio"
              },
              "thrustAngle": {
                "description": "Current thrust angle for steerable drives, +ve is thrust to Starboard",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "rad"
              },
              "propeller": {
                "pitch ": {
                  "description": "Current pitch of propeller, the distance the propeller ideally would advance during one revolution of the propeller",
                  "$ref": "../definitions.json#/definitions/numberValue",
                  "units": "m"
                },
                "slip": {
                  "description": "Propeller slip, the ratio between propeller pitch and actual distance travelled",
                  "$ref": "../definitions.json#/definitions/numberValue",
                  "units": "ratio"
                }
              }
            }
          },
          "fuel": {
            "type": "object",
            "properties": {
              "type": {
                "description": "Fuel type",
                "enum": [
                  "diesel",
                  "petrol",
                  "electric",
                  "coal/wood",
                  "other"
                ]
              },
              "used": {
                "description": "Used fuel since last reset. Resetting is at user discretion",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "m3"
              },
              "pressure": {
                "description": "Fuel pressure",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "Pa"
              },
              "rate": {
                "description": "Fuel rate",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "m3/s"
              },
              "economyRate": {
                "description": "Fuel rate",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "m3/s"
              },
              "averageRate": {
                "description": "Fuel rate",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "m3/s"
              }
            }
          },
          "waterTemperature": {
            "description": "Water temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "exhaustTemperature": {
            "description": "Exhaust temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "fuelRate": {
            "description": "Fuel consumption rate",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m3/s"
          }
        }
      },
      "exhaustTemperature": {
        "description": "Exhaust temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)": {
    "description": "This regex pattern is used for validation of the identifier for the propulsion unit",
    "properties": {
      "label": {
        "type": "string",
        "description": "Human readable label for the propulsion unit"
      },
      "state": {
        "type": "object",
        "description": "The current state of the engine",
        "allOf": [
          {
            "$ref": "../definitions.json#/definitions/commonValueFields"
          },
          {
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "stopped",
                  "started",
                  "unusable"
                ]
              }
            }
          }
        ]
      },
      "revolutions": {
        "description": "Engine revolutions",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Hz"
      },
      "temperature": {
        "description": "Engine temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "oilTemperature": {
        "description": "Oil temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "oilPressure": {
        "description": "Oil pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      },
      "alternatorVoltage": {
        "description": "Alternator voltage",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "V"
      },
      "runTime": {
        "description": "Total running time for engine",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "s"
      },
      "coolantTemperature": {
        "description": "Coolant temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "coolantPressure": {
        "description": "Coolant pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      },
      "boostPressure": {
        "description": "Engine boost (turbo, supercharger) pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      },
      "engineLoad": {
        "description": "Engine load ratio, 1 is 100%",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "engineTorque": {
        "description": "Engine torque ratio, 1 is 100%",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "transmission": {
        "type": "object",
        "properties": {
          "gear": {
            "type": "object",
            "properties": {
              "value": {
                "enum": [
                  "Forward",
                  "Neutral",
                  "Reverse",
                  "Fault"
                ]
              }
            }
          },
          "gearRatio": {
            "description": "Gear ratio, Engine rotations per propeller shaft rotation",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "oilTemperature": {
            "description": "Oil temperature",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "K"
          },
          "oilPressure": {
            "description": "Oil pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          }
        }
      },
      "drive": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "saildrive",
              "shaft",
              "outboard",
              "jet",
              "pod",
              "other"
            ]
          },
          "trimState": {
            "description": "Trim/tilt state",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "ratio"
          },
          "thrustAngle": {
            "description": "Current thrust angle for steerable drives, +ve is thrust to Starboard",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "propeller": {
            "pitch ": {
              "description": "Current pitch of propeller, the distance the propeller ideally would advance during one revolution of the propeller",
              "$ref": "../definitions.json#/definitions/numberValue",
              "units": "m"
            },
            "slip": {
              "description": "Propeller slip, the ratio between propeller pitch and actual distance travelled",
              "$ref": "../definitions.json#/definitions/numberValue",
              "units": "ratio"
            }
          }
        }
      },
      "fuel": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Fuel type",
            "enum": [
              "diesel",
              "petrol",
              "electric",
              "coal/wood",
              "other"
            ]
          },
          "used": {
            "description": "Used fuel since last reset. Resetting is at user discretion",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m3"
          },
          "pressure": {
            "description": "Fuel pressure",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "Pa"
          },
          "rate": {
            "description": "Fuel rate",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m3/s"
          },
          "economyRate": {
            "description": "Fuel rate",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m3/s"
          },
          "averageRate": {
            "description": "Fuel rate",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m3/s"
          }
        }
      },
      "waterTemperature": {
        "description": "Water temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "exhaustTemperature": {
        "description": "Exhaust temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "fuelRate": {
        "description": "Fuel consumption rate",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m3/s"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/label": {
    "type": "string",
    "description": "Human readable label for the propulsion unit"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/state": {
    "type": "object",
    "description": "The current state of the engine",
    "allOf": [
      {
        "$ref": "../definitions.json#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "stopped",
              "started",
              "unusable"
            ]
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/revolutions": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/temperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/oilTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/oilPressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/alternatorVoltage": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/runTime": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/coolantTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/coolantPressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/boostPressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/engineLoad": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/engineTorque": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission": {
    "type": "object",
    "properties": {
      "gear": {
        "type": "object",
        "properties": {
          "value": {
            "enum": [
              "Forward",
              "Neutral",
              "Reverse",
              "Fault"
            ]
          }
        }
      },
      "gearRatio": {
        "description": "Gear ratio, Engine rotations per propeller shaft rotation",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "oilTemperature": {
        "description": "Oil temperature",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "K"
      },
      "oilPressure": {
        "description": "Oil pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission/gear": {
    "type": "object",
    "properties": {
      "value": {
        "enum": [
          "Forward",
          "Neutral",
          "Reverse",
          "Fault"
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission/gear/value": {
    "enum": [
      "Forward",
      "Neutral",
      "Reverse",
      "Fault"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission/gearRatio": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission/oilTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/transmission/oilPressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/drive": {
    "type": "object",
    "properties": {
      "type": {
        "enum": [
          "saildrive",
          "shaft",
          "outboard",
          "jet",
          "pod",
          "other"
        ]
      },
      "trimState": {
        "description": "Trim/tilt state",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "thrustAngle": {
        "description": "Current thrust angle for steerable drives, +ve is thrust to Starboard",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "propeller": {
        "pitch ": {
          "description": "Current pitch of propeller, the distance the propeller ideally would advance during one revolution of the propeller",
          "$ref": "../definitions.json#/definitions/numberValue",
          "units": "m"
        },
        "slip": {
          "description": "Propeller slip, the ratio between propeller pitch and actual distance travelled",
          "$ref": "../definitions.json#/definitions/numberValue",
          "units": "ratio"
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/drive/type": {
    "enum": [
      "saildrive",
      "shaft",
      "outboard",
      "jet",
      "pod",
      "other"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/drive/trimState": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/drive/thrustAngle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/drive/propeller": {
    "pitch ": {
      "description": "Current pitch of propeller, the distance the propeller ideally would advance during one revolution of the propeller",
      "$ref": "../definitions.json#/definitions/numberValue",
      "units": "m"
    },
    "slip": {
      "description": "Propeller slip, the ratio between propeller pitch and actual distance travelled",
      "$ref": "../definitions.json#/definitions/numberValue",
      "units": "ratio"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel": {
    "type": "object",
    "properties": {
      "type": {
        "description": "Fuel type",
        "enum": [
          "diesel",
          "petrol",
          "electric",
          "coal/wood",
          "other"
        ]
      },
      "used": {
        "description": "Used fuel since last reset. Resetting is at user discretion",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m3"
      },
      "pressure": {
        "description": "Fuel pressure",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "Pa"
      },
      "rate": {
        "description": "Fuel rate",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m3/s"
      },
      "economyRate": {
        "description": "Fuel rate",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m3/s"
      },
      "averageRate": {
        "description": "Fuel rate",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m3/s"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/type": {
    "description": "Fuel type",
    "enum": [
      "diesel",
      "petrol",
      "electric",
      "coal/wood",
      "other"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/used": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/pressure": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/rate": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/economyRate": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuel/averageRate": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/waterTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/exhaustTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/(^[A-Za-z0-9]+$)/fuelRate": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/propulsion/exhaustTemperature": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/electrical.json#",
    "description": "Schema describing the electrical child-object of a Vessel.",
    "title": "Electrical Properties",
    "type": "object",
    "definitions": {
      "identity": {
        "type": "object",
        "title": "Electrical ID",
        "description": " Common ID items shared by electrical items",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique ID of device (houseBattery, alternator, Generator, solar1, inverter, charger, combiner, etc.)"
          },
          "location": {
            "type": "string",
            "description": "Installed location of device on vessel"
          },
          "dateInstalled": {
            "$ref": "../definitions.json#/definitions/timestamp",
            "description": "Date device was installed"
          },
          "manufacturer": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Manufacturer's name"
              },
              "model": {
                "type": "string",
                "description": "Model or part number"
              }
            }
          }
        }
      },
      "dcQuantities": {
        "type": "object",
        "title": "DC Quantities",
        "description": "DC common quantities",
        "properties": {
          "associatedBus": {
            "type": "string",
            "description": "Name of BUS source is associated with"
          },
          "voltage": {
            "type": "object",
            "units": "V",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/numberValue"
              },
              {
                "properties": {
                  "ripple": {
                    "description": "Ripple voltage",
                    "$ref": "../definitions.json#/definitions/numberValue",
                    "units": "V"
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "nominal": {
                        "type": "number",
                        "units": "V",
                        "description": "Designed 'voltage' of battery (12v, 24v, 32v, 36v, 42v, 48v, 144v, etc.)"
                      },
                      "warnUpper": {
                        "type": "number",
                        "units": "V",
                        "description": "Upper operational voltage limit"
                      },
                      "warnLower": {
                        "type": "number",
                        "units": "V",
                        "description": "Lower operational voltage limit"
                      },
                      "faultUpper": {
                        "type": "number",
                        "units": "V",
                        "description": "Upper fault limit of battery voltage - BMS may disconnect battery"
                      },
                      "faultLower": {
                        "type": "number",
                        "units": "V",
                        "description": "Lower fault limit of battery voltage - BMS may disconnect battery"
                      }
                    }
                  }
                }
              }
            ]
          },
          "current": {
            "type": "object",
            "units": "A",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/numberValue"
              },
              {
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "warnUpper": {
                        "type": "number",
                        "description": "Upper operational current limit",
                        "units": "A"
                      },
                      "warnLower": {
                        "type": "number",
                        "description": "Lower operational current limit",
                        "units": "A"
                      },
                      "faultUpper": {
                        "type": "number",
                        "description": "Upper fault limit of battery current - BMS may disconnect battery",
                        "units": "A"
                      },
                      "faultLower": {
                        "type": "number",
                        "description": "Lower fault limit of battery current - BMS may disconnect battery",
                        "units": "A"
                      }
                    }
                  }
                }
              }
            ]
          },
          "temperature": {
            "type": "object",
            "title": "temperature",
            "allOf": [
              {
                "$ref": "../definitions.json#/definitions/numberValue"
              },
              {
                "properties": {
                  "warnUpper": {
                    "type": "number",
                    "description": "Upper operational temperature limit",
                    "units": "K"
                  },
                  "warnLower": {
                    "type": "number",
                    "description": "Lower operational temperature limit",
                    "units": "K"
                  },
                  "faultUpper": {
                    "type": "number",
                    "description": "Upper fault limit of temperature - device may disable",
                    "units": "K"
                  },
                  "faultLower": {
                    "type": "number",
                    "description": "Lower fault limit of temperature - device may disable",
                    "units": "K"
                  }
                }
              }
            ]
          }
        }
      },
      "acQuantities": {
        "type": "object",
        "title": "AC Quantities",
        "description": "AC equipment common quantities",
        "properties": {
          "associatedBus": {
            "type": "string",
            "description": "Name of BUS source is assocated with (if applicable, may = NULL)"
          },
          "lineNeutralVoltage": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "RMS voltage measured between phase and neutral.",
            "units": "V"
          },
          "lineLineVoltage": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "RMS voltage measured between phases",
            "units": "V"
          },
          "current": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "RMS current",
            "units": "A"
          },
          "frequency": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "AC frequency.",
            "units": "Hz"
          },
          "reactivePower": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Reactive power",
            "units": "W"
          },
          "powerFactor": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Power factor",
            "unit": "ratio"
          },
          "powerFactorLagging": {
            "description": "Lead/lag status.",
            "example": "leading",
            "type": "string",
            "enum": [
              "leading",
              "lagging",
              "error",
              "not available"
            ]
          },
          "realPower": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Real power.",
            "units": "W"
          },
          "apparentPower": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "Apparent power.",
            "units": "W"
          }
        }
      }
    },
    "properties": {
      "batteries": {
        "patternProperties": {
          "(^[A-Za-z0-9]+$)": {
            "type": "object",
            "title": "Battery keyed by instance id",
            "description": "Batteries, one or many, within the vessel",
            "allOf": [
              {
                "$ref": "#/definitions/dcQuantities"
              },
              {
                "properties": {
                  "meta": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/identity"
                      },
                      {
                        "properties": {
                          "chemistry": {
                            "type": "string",
                            "description": "Type of battery FLA, LiFePO4, etc."
                          }
                        }
                      }
                    ]
                  },
                  "temperature": {
                    "type": "object",
                    "title": "temperature",
                    "description": "Additional / unique temperatures associated with a battery",
                    "properties": {
                      "limitDischargeLower": {
                        "type": "number",
                        "description": "Operational minimum temperature limit for battery discharge, in degrees Celsius",
                        "units": "K"
                      },
                      "limitDischargeUpper": {
                        "type": "number",
                        "description": "Operational maximum temperature limit for battery discharge, in degrees Celsius",
                        "units": "K"
                      },
                      "limitRechargeLower": {
                        "type": "number",
                        "description": "Operational minimum temperature limit for battery recharging, in degrees Celsius",
                        "units": "K"
                      },
                      "limitRechargeUpper": {
                        "type": "number",
                        "description": "Operational maximum temperature limit for battery recharging, in degrees Celsius",
                        "units": "K"
                      }
                    }
                  },
                  "capacity": {
                    "type": "object",
                    "title": "capacity",
                    "properties": {
                      "nominal": {
                        "type": "number",
                        "description": "The capacity of battery as specified by the manufacturer",
                        "units": "J"
                      },
                      "actual": {
                        "type": "number",
                        "description": "The measured capacity of battery. This may change over time and will likely deviate from the nominal capacity.",
                        "units": "J"
                      },
                      "remaining": {
                        "type": "number",
                        "description": "Capacity remaining in battery",
                        "units": "J"
                      },
                      "dischargeLimit": {
                        "type": "number",
                        "description": "Minimum capacity to be left in the battery while discharging",
                        "units": "J"
                      },
                      "stateOfCharge": {
                        "$ref": "../definitions.json#/definitions/numberValue",
                        "description": "State of charge, 1 = 100%",
                        "units": "ratio"
                      },
                      "stateOfHealth": {
                        "$ref": "../definitions.json#/definitions/numberValue",
                        "description": "State of Health, 1 = 100%",
                        "units": "ratio"
                      },
                      "dischargeSinceFull": {
                        "$ref": "../definitions.json#/definitions/numberValue",
                        "description": "Cumulative discharge since battery was last full",
                        "units": "C"
                      },
                      "timeRemaining": {
                        "$ref": "../definitions.json#/definitions/numberValue",
                        "description": "Time to discharge to discharge limit at current rate",
                        "units": "s"
                      }
                    }
                  },
                  "lifetimeDischarge": {
                    "type": "number",
                    "description": "Cumulative charge discharged from battery over operational lifetime of battery",
                    "units": "C"
                  },
                  "lifetimeRecharge": {
                    "type": "number",
                    "description": "Cumulative charge recharged into battery over operational lifetime of battery",
                    "units": "C"
                  }
                }
              }
            ]
          }
        }
      },
      "inverters": {
        "patternProperties": {
          "(^[A-Za-z0-9]+$)": {
            "type": "object",
            "title": "Inverter",
            "description": "DC to AC inverter, one or many, within the vessel",
            "properties": {
              "meta": {
                "$ref": "#/definitions/identity"
              },
              "dc": {
                "$ref": "#/definitions/dcQuantities"
              },
              "ac": {
                "$ref": "#/definitions/acQuantities"
              },
              "mode": {
                "type": "object",
                "description": "Mode of inverter",
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "idle",
                      "inverting",
                      "disabled",
                      "standby",
                      "faulted",
                      "unknown",
                      "other"
                    ]
                  },
                  "timestamp": {
                    "$ref": "../definitions.json#/definitions/timestamp"
                  },
                  "$source": {
                    "$ref": "../definitions.json#/definitions/$source"
                  }
                }
              }
            }
          }
        }
      },
      "chargers": {
        "patternProperties": {
          "(^[A-Za-z0-9]+$)": {
            "type": "object",
            "title": "Charger",
            "description": "Battery charger",
            "allOf": [
              {
                "$ref": "#/definitions/dcQuantities"
              },
              {
                "properties": {
                  "meta": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/identity"
                      },
                      {
                        "properties": {
                          "chargingAlgorithm": {
                            "enum": [
                              "trickle",
                              "two stage",
                              "three stage",
                              "constant current",
                              "constant voltage",
                              "custom profile"
                            ]
                          },
                          "chargerMode": {
                            "enum": [
                              "standalone",
                              "master",
                              "slave",
                              "standby"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "mode": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "enum": [
                          "charging bulk",
                          "charging acceptance",
                          "charging overcharge",
                          "charging float",
                          "charging equalize",
                          "unknown",
                          "other"
                        ]
                      },
                      "timestamp": {
                        "$ref": "../definitions.json#/definitions/timestamp"
                      },
                      "source": {
                        "$ref": "../definitions.json#/definitions/source"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "ac": {
        "description": "AC buses",
        "patternProperties": {
          "(^[A-Za-z0-9]+$)": {
            "type": "object",
            "title": "AC bus",
            "properties": {
              "meta": {
                "$ref": "#/definitions/identity"
              },
              "phase": {
                "type": "object",
                "patternProperties": {
                  "(single)|([A-C])": {
                    "$ref": "#/definitions/acQuantities"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/batteries": {
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "type": "object",
        "title": "Battery keyed by instance id",
        "description": "Batteries, one or many, within the vessel",
        "allOf": [
          {
            "$ref": "#/definitions/dcQuantities"
          },
          {
            "properties": {
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/definitions/identity"
                  },
                  {
                    "properties": {
                      "chemistry": {
                        "type": "string",
                        "description": "Type of battery FLA, LiFePO4, etc."
                      }
                    }
                  }
                ]
              },
              "temperature": {
                "type": "object",
                "title": "temperature",
                "description": "Additional / unique temperatures associated with a battery",
                "properties": {
                  "limitDischargeLower": {
                    "type": "number",
                    "description": "Operational minimum temperature limit for battery discharge, in degrees Celsius",
                    "units": "K"
                  },
                  "limitDischargeUpper": {
                    "type": "number",
                    "description": "Operational maximum temperature limit for battery discharge, in degrees Celsius",
                    "units": "K"
                  },
                  "limitRechargeLower": {
                    "type": "number",
                    "description": "Operational minimum temperature limit for battery recharging, in degrees Celsius",
                    "units": "K"
                  },
                  "limitRechargeUpper": {
                    "type": "number",
                    "description": "Operational maximum temperature limit for battery recharging, in degrees Celsius",
                    "units": "K"
                  }
                }
              },
              "capacity": {
                "type": "object",
                "title": "capacity",
                "properties": {
                  "nominal": {
                    "type": "number",
                    "description": "The capacity of battery as specified by the manufacturer",
                    "units": "J"
                  },
                  "actual": {
                    "type": "number",
                    "description": "The measured capacity of battery. This may change over time and will likely deviate from the nominal capacity.",
                    "units": "J"
                  },
                  "remaining": {
                    "type": "number",
                    "description": "Capacity remaining in battery",
                    "units": "J"
                  },
                  "dischargeLimit": {
                    "type": "number",
                    "description": "Minimum capacity to be left in the battery while discharging",
                    "units": "J"
                  },
                  "stateOfCharge": {
                    "$ref": "../definitions.json#/definitions/numberValue",
                    "description": "State of charge, 1 = 100%",
                    "units": "ratio"
                  },
                  "stateOfHealth": {
                    "$ref": "../definitions.json#/definitions/numberValue",
                    "description": "State of Health, 1 = 100%",
                    "units": "ratio"
                  },
                  "dischargeSinceFull": {
                    "$ref": "../definitions.json#/definitions/numberValue",
                    "description": "Cumulative discharge since battery was last full",
                    "units": "C"
                  },
                  "timeRemaining": {
                    "$ref": "../definitions.json#/definitions/numberValue",
                    "description": "Time to discharge to discharge limit at current rate",
                    "units": "s"
                  }
                }
              },
              "lifetimeDischarge": {
                "type": "number",
                "description": "Cumulative charge discharged from battery over operational lifetime of battery",
                "units": "C"
              },
              "lifetimeRecharge": {
                "type": "number",
                "description": "Cumulative charge recharged into battery over operational lifetime of battery",
                "units": "C"
              }
            }
          }
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/batteries/(^[A-Za-z0-9]+$)": {
    "type": "object",
    "title": "Battery keyed by instance id",
    "description": "Batteries, one or many, within the vessel",
    "allOf": [
      {
        "$ref": "#/definitions/dcQuantities"
      },
      {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/definitions/identity"
              },
              {
                "properties": {
                  "chemistry": {
                    "type": "string",
                    "description": "Type of battery FLA, LiFePO4, etc."
                  }
                }
              }
            ]
          },
          "temperature": {
            "type": "object",
            "title": "temperature",
            "description": "Additional / unique temperatures associated with a battery",
            "properties": {
              "limitDischargeLower": {
                "type": "number",
                "description": "Operational minimum temperature limit for battery discharge, in degrees Celsius",
                "units": "K"
              },
              "limitDischargeUpper": {
                "type": "number",
                "description": "Operational maximum temperature limit for battery discharge, in degrees Celsius",
                "units": "K"
              },
              "limitRechargeLower": {
                "type": "number",
                "description": "Operational minimum temperature limit for battery recharging, in degrees Celsius",
                "units": "K"
              },
              "limitRechargeUpper": {
                "type": "number",
                "description": "Operational maximum temperature limit for battery recharging, in degrees Celsius",
                "units": "K"
              }
            }
          },
          "capacity": {
            "type": "object",
            "title": "capacity",
            "properties": {
              "nominal": {
                "type": "number",
                "description": "The capacity of battery as specified by the manufacturer",
                "units": "J"
              },
              "actual": {
                "type": "number",
                "description": "The measured capacity of battery. This may change over time and will likely deviate from the nominal capacity.",
                "units": "J"
              },
              "remaining": {
                "type": "number",
                "description": "Capacity remaining in battery",
                "units": "J"
              },
              "dischargeLimit": {
                "type": "number",
                "description": "Minimum capacity to be left in the battery while discharging",
                "units": "J"
              },
              "stateOfCharge": {
                "$ref": "../definitions.json#/definitions/numberValue",
                "description": "State of charge, 1 = 100%",
                "units": "ratio"
              },
              "stateOfHealth": {
                "$ref": "../definitions.json#/definitions/numberValue",
                "description": "State of Health, 1 = 100%",
                "units": "ratio"
              },
              "dischargeSinceFull": {
                "$ref": "../definitions.json#/definitions/numberValue",
                "description": "Cumulative discharge since battery was last full",
                "units": "C"
              },
              "timeRemaining": {
                "$ref": "../definitions.json#/definitions/numberValue",
                "description": "Time to discharge to discharge limit at current rate",
                "units": "s"
              }
            }
          },
          "lifetimeDischarge": {
            "type": "number",
            "description": "Cumulative charge discharged from battery over operational lifetime of battery",
            "units": "C"
          },
          "lifetimeRecharge": {
            "type": "number",
            "description": "Cumulative charge recharged into battery over operational lifetime of battery",
            "units": "C"
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters": {
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "type": "object",
        "title": "Inverter",
        "description": "DC to AC inverter, one or many, within the vessel",
        "properties": {
          "meta": {
            "$ref": "#/definitions/identity"
          },
          "dc": {
            "$ref": "#/definitions/dcQuantities"
          },
          "ac": {
            "$ref": "#/definitions/acQuantities"
          },
          "mode": {
            "type": "object",
            "description": "Mode of inverter",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "idle",
                  "inverting",
                  "disabled",
                  "standby",
                  "faulted",
                  "unknown",
                  "other"
                ]
              },
              "timestamp": {
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "$source": {
                "$ref": "../definitions.json#/definitions/$source"
              }
            }
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters/(^[A-Za-z0-9]+$)": {
    "type": "object",
    "title": "Inverter",
    "description": "DC to AC inverter, one or many, within the vessel",
    "properties": {
      "meta": {
        "$ref": "#/definitions/identity"
      },
      "dc": {
        "$ref": "#/definitions/dcQuantities"
      },
      "ac": {
        "$ref": "#/definitions/acQuantities"
      },
      "mode": {
        "type": "object",
        "description": "Mode of inverter",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "idle",
              "inverting",
              "disabled",
              "standby",
              "faulted",
              "unknown",
              "other"
            ]
          },
          "timestamp": {
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "$source": {
            "$ref": "../definitions.json#/definitions/$source"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters/(^[A-Za-z0-9]+$)/mode": {
    "type": "object",
    "description": "Mode of inverter",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "idle",
          "inverting",
          "disabled",
          "standby",
          "faulted",
          "unknown",
          "other"
        ]
      },
      "timestamp": {
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "$source": {
        "$ref": "../definitions.json#/definitions/$source"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters/(^[A-Za-z0-9]+$)/mode/value": {
    "type": "string",
    "enum": [
      "idle",
      "inverting",
      "disabled",
      "standby",
      "faulted",
      "unknown",
      "other"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters/(^[A-Za-z0-9]+$)/mode/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/inverters/(^[A-Za-z0-9]+$)/mode/$source": {
    "timestamp": {
      "type": "string",
      "description": "ISO-8601 (UTC) string representing date and time.",
      "units": "ISO-8601 (UTC)",
      "example": "2014-04-10T08:33:53Z"
    },
    "source": {
      "type": "object",
      "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
      "required": [
        "label",
        "type"
      ],
      "properties": {
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "NMEA2000"
        },
        "src": {
          "type": "string",
          "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
        },
        "pgn": {
          "type": "number",
          "description": "NMEA2000 pgn of the source message"
        },
        "sentence": {
          "type": "string",
          "description": "Sentence type of the source NMEA0183 sentence"
        },
        "talker": {
          "type": "string",
          "description": "Talker id of the source NMEA0183 sentence"
        }
      }
    },
    "sourceRef": {
      "type": "string",
      "description": "Reference to the source under vessel's sources"
    },
    "version": {
      "type": "string",
      "description": "Version of the Signal K root object.",
      "example": "1.0"
    },
    "units": {
      "type": "string",
      "description": "Allowed units of physical quantities. Units should be (derived) SI units where possible.",
      "properties": {
        "s": {
          "display": "s",
          "quantity": "Time",
          "quantityDisplay": "T",
          "description": "Elapsed time (interval) in seconds"
        },
        "Hz": {
          "display": "Hz",
          "quantity": "Frequency",
          "quantityDisplay": "F",
          "description": "Frequency in Herz"
        },
        "m3": {
          "display": "m³",
          "quantity": "Volume",
          "quantityDisplay": "V",
          "description": "Volume in cubic meters"
        },
        "m3/s": {
          "display": "m3/s",
          "quantity": "Flow",
          "quantityDisplay": "Q",
          "description": "Liquid or gas flow in cubic meters per second"
        },
        "deg": {
          "display": "°",
          "quantity": "Angle",
          "quantityDisplay": "∠",
          "description": "Latitude or longitude in decimal degrees"
        },
        "rad": {
          "display": "㎭",
          "quantity": "Angle",
          "quantityDisplay": "∠",
          "description": "Angular arc in radians"
        },
        "rad/s": {
          "display": "㎭/s",
          "quantity": "Rotation",
          "quantityDisplay": "ω",
          "description": "Angular rate in radians per second"
        },
        "A": {
          "display": "A",
          "quantity": "Current",
          "quantityDisplay": "i",
          "description": "Electrical current in ampere"
        },
        "C": {
          "display": "C",
          "quantity": "Charge",
          "quantityDisplay": "Q",
          "description": "Electrical charge in Coulomb"
        },
        "V": {
          "display": "V",
          "quantity": "Voltage",
          "quantityDisplay": "V",
          "description": "Electrical potential in volt"
        },
        "W": {
          "display": "W",
          "quantity": "Power",
          "quantityDisplay": "P",
          "description": "Electrical power in watt"
        },
        "J": {
          "display": "J",
          "quantity": "Energy",
          "quantityDisplay": "E",
          "description": "Electrical energy in joule"
        },
        "ohm": {
          "display": "Ω",
          "quantity": "Resistance",
          "quantityDisplay": "R",
          "description": "Electrical resistance in ohm"
        },
        "m": {
          "display": "m",
          "quantity": "Distance",
          "quantityDisplay": "d",
          "description": "Distance in meters"
        },
        "m/s": {
          "display": "m/s",
          "quantity": "Velocity",
          "quantityDisplay": "v",
          "description": "Velocity in meters per second"
        },
        "m2": {
          "display": "㎡",
          "quantity": "Area",
          "quantityDisplay": "A",
          "description": "(Surface) area in square meters"
        },
        "K": {
          "display": "K",
          "quantity": "Temperature",
          "quantityDisplay": "t",
          "description": "Temperature in kelvin"
        },
        "Pa": {
          "display": "Pa",
          "quantity": "Pressure",
          "quantityDisplay": "P",
          "description": "Pressure in pascal"
        },
        "kg": {
          "display": "kg",
          "quantity": "Mass",
          "quantityDisplay": "m",
          "description": "Mass in kilogram"
        },
        "ratio": {
          "display": "",
          "quantity": "Ratio",
          "quantityDisplay": "φ",
          "description": "Relative value compared to reference or normal value. 0 = 0%, 1 = 100%, 1e-3 = 1 ppt"
        },
        "m/s2": {
          "display": "m/s²",
          "quantity": "Acceleration",
          "quantityDisplay": "a",
          "description": "Acceleration in meters per second squared"
        },
        "rad/s2": {
          "display": "rad/s²",
          "quantity": "Angular acceleration",
          "quantityDisplay": "a",
          "description": "Angular acceleration in radians per second squared"
        },
        "N": {
          "display": "N",
          "quantity": "Force",
          "quantityDisplay": "F",
          "description": "Force in newton"
        },
        "T": {
          "display": "T",
          "quantity": "Magnetic field",
          "quantityDisplay": "B",
          "description": "Magnetic field strength in tesla"
        },
        "Pa/s": {
          "display": "Pa/s",
          "quantity": "Pressure rate",
          "quantityDisplay": "R",
          "description": "Pressure change rate in pascal per second"
        }
      }
    },
    "mmsi": {
      "type": "string",
      "description": "Maritime Mobile Service Identity (MMSI). Has to be 9 digits. See http://en.wikipedia.org/wiki/Maritime_Mobile_Service_Identity for information.",
      "pattern": "^[2-7][0-9]{8,8}$",
      "maxLength": 9,
      "minLength": 9
    },
    "uuid": {
      "type": "string",
      "description": "A unique Signal K flavoured maritime resource identifier (MRN). A MRN is a form of URN, following a specific format: urn:mrn:<issueing authority>:<id type>:<id>. In case of a Signal K uuid, that looks like this: urn:mrn:signalk:uuid:<uuid>, where Signal K is the issuing authority and UUID (v4) the ID type.",
      "pattern": "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
      "example": "urn:mrn:signalk:uuid:b7590868-1d62-47d9-989c-32321b349fb9"
    },
    "url": {
      "type": "string",
      "description": "A location of a resource, potentially relative. For hierarchical schemes (like http), applications must resolve relative URIs (e.g. './v1/api/'). Implementations should support the following schemes: http:, https:, mailto:, tel:, and ws:."
    },
    "commonValueFields": {
      "type": "object",
      "required": [
        "timestamp",
        "$source"
      ],
      "properties": {
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "$source": {
          "$ref": "#/definitions/sourceRef"
        },
        "_attr": {
          "$ref": "#/definitions/_attr"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "pgn": {
          "type": "number"
        },
        "sentence": {
          "type": "string"
        }
      }
    },
    "numberValue": {
      "type": "object",
      "description": "Data should be of type number.",
      "allOf": [
        {
          "$ref": "#/definitions/commonValueFields"
        },
        {
          "properties": {
            "value": {
              "type": "number"
            },
            "values": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/valuesNumberValue"
                }
              }
            }
          }
        }
      ]
    },
    "valuesNumberValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "pgn": {
          "type": "number"
        },
        "sentence": {
          "type": "string"
        }
      }
    },
    "stringValue": {
      "type": "object",
      "description": "Data should be of type number.",
      "allOf": [
        {
          "$ref": "#/definitions/commonValueFields"
        },
        {
          "properties": {
            "value": {
              "type": "string"
            },
            "values": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/valuesStringValue"
                }
              }
            }
          }
        }
      ]
    },
    "valuesStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "pgn": {
          "type": "number"
        },
        "sentence": {
          "type": "string"
        }
      }
    },
    "nullValue": {
      "type": "object",
      "description": "Data should be of type NULL.",
      "properties": {
        "value": {
          "type": "null"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "_attr": {
          "$ref": "#/definitions/_attr"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        }
      }
    },
    "_attr": {
      "type": "object",
      "title": "_attr schema.",
      "description": "Filesystem specific data, e.g. security, possibly more later.",
      "properties": {
        "_mode": {
          "type": "integer",
          "title": "_mode schema.",
          "description": "Unix style permissions, often written in `owner:group:other` form, `-rw-r--r--`",
          "default": 644
        },
        "_owner": {
          "type": "string",
          "title": "_owner schema.",
          "description": "The owner of this resource.",
          "default": "self"
        },
        "_group": {
          "type": "string",
          "title": "_group schema.",
          "description": "The group owning this resource.",
          "default": "self"
        }
      }
    },
    "alarmState": {
      "type": "string",
      "title": "alarmState",
      "description": "The alarm state when the value is in this zone.",
      "default": "normal",
      "enum": [
        "normal",
        "alert",
        "warn",
        "alarm",
        "emergency"
      ]
    },
    "alarmMethodEnum": {
      "enum": [
        "visual",
        "sound"
      ]
    },
    "meta": {
      "type": "object",
      "title": "Meta schema.",
      "description": "Provides meta data to enable alarm and display configuration.",
      "properties": {
        "displayName": {
          "type": "string",
          "title": "DisplayName schema.",
          "description": "A display name for this value.",
          "example": "Tachometer, Engine 1"
        },
        "longName": {
          "type": "string",
          "title": "LongName schema.",
          "description": "A long name for this value.",
          "example": "Tachometer, Engine 1"
        },
        "shortName": {
          "type": "string",
          "title": "ShortName schema.",
          "description": "A short name for this value.",
          "example": "RPM"
        },
        "gaugeType": {
          "type": "string",
          "title": "gaugeType schema.",
          "description": "The type of gauge necessary to display this value.",
          "example": "sparkline"
        },
        "units": {
          "type": "string",
          "title": "units schema.",
          "description": "The (derived) SI unit of this value.",
          "example": "m/s"
        },
        "timeout": {
          "type": "number",
          "title": "Timeout",
          "description": "The timeout in (fractional) seconds after which this data is invalid.",
          "example": 2
        },
        "alertMethod": {
          "type": "array",
          "title": "Alert Method",
          "description": "The method to use to raise the alert. An alert is an event that should be known",
          "default": [
            "visual"
          ],
          "items": {
            "$ref": "#/definitions/alarmMethodEnum"
          }
        },
        "warnMethod": {
          "type": "array",
          "title": "Warn Method",
          "description": "The method to use to raise the warning. A warning is an unexpected event that may require attention",
          "default": [
            "visual"
          ],
          "items": {
            "$ref": "#/definitions/alarmMethodEnum"
          }
        },
        "alarmMethod": {
          "type": "array",
          "title": "Alarm Method",
          "description": "The method to use to raise the alarm. An alarm requires immediate attention, eg no oil pressure",
          "default": [
            "visual",
            "sound"
          ],
          "items": {
            "$ref": "#/definitions/alarmMethodEnum"
          }
        },
        "emergencyMethod": {
          "type": "array",
          "title": "Emergency Method",
          "description": "The method to use to raise an emergency. An emergency is an immediate danger to life or vessel",
          "default": [
            "visual",
            "sound"
          ],
          "items": {
            "$ref": "#/definitions/alarmMethodEnum"
          }
        },
        "zones": {
          "type": "array",
          "title": "Zones schema.",
          "description": "The zones defining the range of values for this signalk value.",
          "items": [
            {
              "type": "object",
              "title": "zone",
              "description": "A zone used to define the display and alarm state when the value is in between bottom and top.",
              "required": [
                "state"
              ],
              "properties": {
                "lower": {
                  "id": "lower",
                  "type": "number",
                  "title": "Lower",
                  "description": "The lowest number in this zone",
                  "name": "lower",
                  "example": 3500
                },
                "upper": {
                  "id": "upper",
                  "type": "number",
                  "title": "Upper",
                  "description": "The highest value in this zone",
                  "name": "upper",
                  "example": 4000
                },
                "state": {
                  "$ref": "#/definitions/alarmState"
                },
                "message": {
                  "id": "message",
                  "type": "string",
                  "title": "message",
                  "description": "The message to display for the alarm.",
                  "default": "Warning"
                }
              }
            }
          ]
        }
      }
    },
    "geohash": {
      "type": "string",
      "description": "A geohash (see http://geohash.org)",
      "pattern": "^[0-9A-Za-z:]{1,}$",
      "example": "eg rbe:TasmanBay"
    },
    "position": {
      "type": "object",
      "title": "position",
      "description": "The position in 3 dimensions",
      "allOf": [
        {
          "$ref": "#/definitions/commonValueFields"
        },
        {
          "properties": {
            "longitude": {
              "type": "number",
              "description": "Longitude",
              "units": "deg",
              "example": 4.98765245
            },
            "latitude": {
              "type": "number",
              "description": "Latitude",
              "units": "deg",
              "example": 52.0987654
            },
            "altitude": {
              "type": "number",
              "description": "Altitude",
              "units": "m"
            }
          }
        }
      ]
    },
    "waypoint": {
      "type": "object",
      "description": "A waypoint, an object with a signal k position object, and GeoJSON Feature object (see geojson.org, and https://github.com/fge/sample-json-schemas/tree/master/geojson)",
      "properties": {
        "position": {
          "$ref": "#/definitions/position"
        },
        "feature": {
          "title": "Feature",
          "description": "A Geo JSON feature object",
          "required": [
            "geometry",
            "properties"
          ],
          "properties": {
            "type": {
              "enum": [
                "Feature"
              ]
            },
            "geometry": {
              "title": "Point",
              "properties": {
                "type": {
                  "enum": [
                    "Point"
                  ]
                },
                "coordinates": {
                  "description": "A single position, in x,y order (Lon, Lat)",
                  "type": "array",
                  "minItems": 2,
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "additionalItems": false
                }
              }
            },
            "properties": {
              "type": [
                "object",
                "null"
              ],
              "description": "Additional data of any type",
              "additionalProperties": true
            },
            "id": {
              "FIXME": "may be there, type not known (string? number?)"
            }
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/chargers": {
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "type": "object",
        "title": "Charger",
        "description": "Battery charger",
        "allOf": [
          {
            "$ref": "#/definitions/dcQuantities"
          },
          {
            "properties": {
              "meta": {
                "allOf": [
                  {
                    "$ref": "#/definitions/identity"
                  },
                  {
                    "properties": {
                      "chargingAlgorithm": {
                        "enum": [
                          "trickle",
                          "two stage",
                          "three stage",
                          "constant current",
                          "constant voltage",
                          "custom profile"
                        ]
                      },
                      "chargerMode": {
                        "enum": [
                          "standalone",
                          "master",
                          "slave",
                          "standby"
                        ]
                      }
                    }
                  }
                ]
              },
              "mode": {
                "type": "object",
                "properties": {
                  "value": {
                    "enum": [
                      "charging bulk",
                      "charging acceptance",
                      "charging overcharge",
                      "charging float",
                      "charging equalize",
                      "unknown",
                      "other"
                    ]
                  },
                  "timestamp": {
                    "$ref": "../definitions.json#/definitions/timestamp"
                  },
                  "source": {
                    "$ref": "../definitions.json#/definitions/source"
                  }
                }
              }
            }
          }
        ]
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/chargers/(^[A-Za-z0-9]+$)": {
    "type": "object",
    "title": "Charger",
    "description": "Battery charger",
    "allOf": [
      {
        "$ref": "#/definitions/dcQuantities"
      },
      {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/definitions/identity"
              },
              {
                "properties": {
                  "chargingAlgorithm": {
                    "enum": [
                      "trickle",
                      "two stage",
                      "three stage",
                      "constant current",
                      "constant voltage",
                      "custom profile"
                    ]
                  },
                  "chargerMode": {
                    "enum": [
                      "standalone",
                      "master",
                      "slave",
                      "standby"
                    ]
                  }
                }
              }
            ]
          },
          "mode": {
            "type": "object",
            "properties": {
              "value": {
                "enum": [
                  "charging bulk",
                  "charging acceptance",
                  "charging overcharge",
                  "charging float",
                  "charging equalize",
                  "unknown",
                  "other"
                ]
              },
              "timestamp": {
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "source": {
                "$ref": "../definitions.json#/definitions/source"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/ac": {
    "description": "AC buses",
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "type": "object",
        "title": "AC bus",
        "properties": {
          "meta": {
            "$ref": "#/definitions/identity"
          },
          "phase": {
            "type": "object",
            "patternProperties": {
              "(single)|([A-C])": {
                "$ref": "#/definitions/acQuantities"
              }
            }
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/ac/(^[A-Za-z0-9]+$)": {
    "type": "object",
    "title": "AC bus",
    "properties": {
      "meta": {
        "$ref": "#/definitions/identity"
      },
      "phase": {
        "type": "object",
        "patternProperties": {
          "(single)|([A-C])": {
            "$ref": "#/definitions/acQuantities"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/electrical/ac/(^[A-Za-z0-9]+$)/phase": {
    "type": "object",
    "patternProperties": {
      "(single)|([A-C])": {
        "$ref": "#/definitions/acQuantities"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications": {
    "type": "object",
    "title": "notifications",
    "description": "Notifications currently raised",
    "properties": {
      "mob": {
        "description": "Man overboard",
        "$ref": "groups/notifications.json#"
      },
      "fire": {
        "description": "Fire onboard",
        "$ref": "groups/notifications.json#"
      },
      "sinking": {
        "description": "Vessel is sinking",
        "$ref": "groups/notifications.json#"
      },
      "flooding": {
        "description": "Vessel is flooding",
        "$ref": "groups/notifications.json#"
      },
      "collision": {
        "description": "In collision with another vessel or object",
        "$ref": "groups/notifications.json#"
      },
      "grounding": {
        "description": "Vessel grounding",
        "$ref": "groups/notifications.json#"
      },
      "listing": {
        "description": "Vessel is listing",
        "$ref": "groups/notifications.json#"
      },
      "adrift": {
        "description": "Vessel is adrift",
        "$ref": "groups/notifications.json#"
      },
      "piracy": {
        "description": "Under attack or danger from pirates",
        "$ref": "groups/notifications.json#"
      },
      "abandon": {
        "description": "Abandon ship",
        "$ref": "groups/notifications.json#"
      }
    },
    "patternProperties": {
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "groups/notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/mob/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/fire/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/sinking/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/flooding/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/collision/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/grounding/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/listing/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/adrift/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/piracy/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/abandon/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)": {
    "type": [
      "object",
      "string",
      "array"
    ],
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/notifications.json#",
    "title": "notifications",
    "description": "Alarms, their state, and actions. The alarm limits are set in any Signal K key.meta.zones array.",
    "patternProperties": {
      "(^method$)": {
        "description": "Method to use to raise notifications",
        "type": "array",
        "items": {
          "$ref": "../definitions.json#/definitions/alarmMethodEnum"
        }
      },
      "(^state$)": {
        "description": "Current alarm state",
        "$ref": "../definitions.json#/definitions/alarmState"
      },
      "(^message$)": {
        "description": "Message to display or speak",
        "type": "string"
      },
      "(^timestamp$)": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "(^\\$source$)": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/sourceRef"
      },
      "(^[A-Za-z0-9-]+$)": {
        "description": "This regex pattern is used for validation of the path of the alarm",
        "$ref": "notifications.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)/(^method$)": {
    "description": "Method to use to raise notifications",
    "type": "array",
    "items": {
      "$ref": "../definitions.json#/definitions/alarmMethodEnum"
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)/(^state$)": {
    "type": "string",
    "title": "alarmState",
    "description": "The alarm state when the value is in this zone.",
    "default": "normal",
    "enum": [
      "normal",
      "alert",
      "warn",
      "alarm",
      "emergency"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)/(^message$)": {
    "description": "Message to display or speak",
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)/(^timestamp$)": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/notifications/(^[A-Za-z0-9-]+$)/(^\\$source$)": {
    "type": "string",
    "description": "Reference to the source under vessel's sources"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/steering.json#",
    "description": "Schema describing the steering child-object of a vessel.",
    "title": "steering",
    "properties": {
      "rudderAngle": {
        "description": "Current rudder angle, +ve is rudder to Starboard",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "rudderAngleTarget": {
        "description": "The angle the rudder should move to, +ve is rudder to Starboard",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "autopilot": {
        "type": "object",
        "title": "autopilot",
        "description": "Autopilot data",
        "properties": {
          "state": {
            "type": "object",
            "description": "Autopilot state",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "on",
                  "off",
                  "alarm"
                ]
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              }
            }
          },
          "mode": {
            "type": "object",
            "description": "Operational mode",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "powersave",
                  "normal",
                  "accurate"
                ]
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              }
            }
          },
          "targetHeadingNorth": {
            "description": "Target heading for autopilot, relative to true North",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "targetHeadingMagnetic": {
            "description": "Target heading for autopilot, relative to magnetic North",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "headingSource": {
            "type": "object",
            "description": "Current source of heading information",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "compass",
                  "wind",
                  "gps"
                ]
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              }
            }
          },
          "deadZone": {
            "description": "Dead zone to ignore for rudder corrections",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "backlash": {
            "description": "Slack in the rudder drive mechanism",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "gain": {
            "description": "Auto-pilot gain, higher number equals more rudder movement for a given turn",
            "$ref": "../definitions.json#/definitions/numberValue"
          },
          "maxDriveCurrent": {
            "description": "Maximum current to use to drive servo",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "A"
          },
          "maxDriveRate": {
            "description": "Maximum rudder rotation speed",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad/s"
          },
          "portLock": {
            "description": "Position of servo on port lock",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          },
          "starboardLock": {
            "description": "Position of servo on starboard lock",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "rad"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/rudderAngle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/rudderAngleTarget": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot": {
    "type": "object",
    "title": "autopilot",
    "description": "Autopilot data",
    "properties": {
      "state": {
        "type": "object",
        "description": "Autopilot state",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "alarm"
            ]
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "mode": {
        "type": "object",
        "description": "Operational mode",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "powersave",
              "normal",
              "accurate"
            ]
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "targetHeadingNorth": {
        "description": "Target heading for autopilot, relative to true North",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "targetHeadingMagnetic": {
        "description": "Target heading for autopilot, relative to magnetic North",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "headingSource": {
        "type": "object",
        "description": "Current source of heading information",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "compass",
              "wind",
              "gps"
            ]
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "deadZone": {
        "description": "Dead zone to ignore for rudder corrections",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "backlash": {
        "description": "Slack in the rudder drive mechanism",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "gain": {
        "description": "Auto-pilot gain, higher number equals more rudder movement for a given turn",
        "$ref": "../definitions.json#/definitions/numberValue"
      },
      "maxDriveCurrent": {
        "description": "Maximum current to use to drive servo",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "A"
      },
      "maxDriveRate": {
        "description": "Maximum rudder rotation speed",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad/s"
      },
      "portLock": {
        "description": "Position of servo on port lock",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "starboardLock": {
        "description": "Position of servo on starboard lock",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state": {
    "type": "object",
    "description": "Autopilot state",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "on",
          "off",
          "alarm"
        ]
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/value": {
    "type": "string",
    "enum": [
      "on",
      "off",
      "alarm"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/state/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode": {
    "type": "object",
    "description": "Operational mode",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "powersave",
          "normal",
          "accurate"
        ]
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/value": {
    "type": "string",
    "enum": [
      "powersave",
      "normal",
      "accurate"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/mode/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/targetHeadingNorth": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/targetHeadingMagnetic": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource": {
    "type": "object",
    "description": "Current source of heading information",
    "properties": {
      "value": {
        "type": "string",
        "enum": [
          "compass",
          "wind",
          "gps"
        ]
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/value": {
    "type": "string",
    "enum": [
      "compass",
      "wind",
      "gps"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/headingSource/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/deadZone": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/backlash": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/gain": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/maxDriveCurrent": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/maxDriveRate": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/portLock": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/steering/autopilot/starboardLock": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/tanks": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/tanks.json#",
    "description": "A tank, named by a unique identifier",
    "definitions": {
      "tankCollection": {
        "patternProperties": {
          ".*": {
            "name": "Tank",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the tank. Useful if multiple tanks of a certain type are on board"
              },
              "type": {
                "type": "string",
                "description": "The type of tank",
                "enum": [
                  "petrol",
                  "fresh water",
                  "greywater",
                  "holding",
                  "lpg",
                  "diesel",
                  "rum"
                ]
              },
              "capacity": {
                "description": "Total capacity",
                "type": "number",
                "units": "m3"
              },
              "currentLevel": {
                "description": "Level of fluid in tank 0-100%",
                "$ref": "../definitions.json#/definitions/numberValue",
                "units": "ratio"
              },
              "currentVolume": {
                "description": "Volume of fluid in tank",
                "units": "m3",
                "$ref": "../definitions.json#/definitions/numberValue"
              }
            }
          }
        }
      }
    },
    "properties": {
      "freshWater": {
        "$ref": "#/definitions/tankCollection"
      },
      "wasteWater": {
        "$ref": "#/definitions/tankCollection"
      },
      "blackWater": {
        "$ref": "#/definitions/tankCollection"
      },
      "fuelWater": {
        "$ref": "#/definitions/tankCollection"
      },
      "fuel": {
        "$ref": "#/definitions/tankCollection"
      },
      "lubrication": {
        "$ref": "#/definitions/tankCollection"
      },
      "liveWell": {
        "$ref": "#/definitions/tankCollection"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/design.json#",
    "description": "An object describing the vessels primary dimensions and statistics.",
    "title": "design",
    "properties": {
      "displacement": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "The displacement of the vessel",
        "units": "kg"
      },
      "draft": {
        "type": "object",
        "title": "draft",
        "description": "The draft of the vessel",
        "properties": {
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "minimum": {
            "description": "The minimum draft of the vessel",
            "type": "number",
            "units": "m"
          },
          "maximum": {
            "description": "The maximum draft of the vessel",
            "type": "number",
            "units": "m"
          },
          "canoe": {
            "description": "The draft of the vessel without protrusions such as keel, centerboard, rudder",
            "type": "number",
            "units": "m"
          }
        }
      },
      "length": {
        "type": "object",
        "title": "length",
        "description": "The various lengths of the vessel",
        "properties": {
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "overall": {
            "type": "number",
            "description": "Length overall",
            "units": "m"
          },
          "hull": {
            "type": "number",
            "description": "Length of hull",
            "units": "m"
          },
          "waterline": {
            "type": "number",
            "description": "Length at waterline",
            "units": "m"
          }
        }
      },
      "keel": {
        "type": "object",
        "title": "keel",
        "description": "Information about the vessel's keel",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of keel.",
            "enum": [
              "long",
              "fin",
              "flare",
              "bulb",
              "wing",
              "centerboard",
              "kanting",
              "lifting",
              "daggerboard"
            ]
          },
          "angle": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "A number indicating at which angle the keel currently is (in case of a canting keel), negative to port.",
            "units": "rad"
          },
          "lift": {
            "$ref": "../definitions.json#/definitions/numberValue",
            "description": "In the case of a lifting keel, centreboard or daggerboard, the part of the keel which is extended. 0 is 'all the way up' and 1 is 'all the way down'. 0.8 would be 80% down.",
            "units": "ratio",
            "example": 0.8
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      },
      "beam": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Beam length",
        "units": "m"
      },
      "airHeight": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "Total height of the vessel",
        "units": "m"
      },
      "rigging": {
        "type": "object",
        "title": "rigging",
        "description": "Information about the vessel's rigging",
        "properties": {
          "configuration": {
            "type": "string",
            "description": "The configuration of the rigging",
            "example": "sloop"
          },
          "masts": {
            "type": "number",
            "description": "The number of masts on the vessel."
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/displacement": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft": {
    "type": "object",
    "title": "draft",
    "description": "The draft of the vessel",
    "properties": {
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "minimum": {
        "description": "The minimum draft of the vessel",
        "type": "number",
        "units": "m"
      },
      "maximum": {
        "description": "The maximum draft of the vessel",
        "type": "number",
        "units": "m"
      },
      "canoe": {
        "description": "The draft of the vessel without protrusions such as keel, centerboard, rudder",
        "type": "number",
        "units": "m"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/minimum": {
    "description": "The minimum draft of the vessel",
    "type": "number",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/maximum": {
    "description": "The maximum draft of the vessel",
    "type": "number",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/draft/canoe": {
    "description": "The draft of the vessel without protrusions such as keel, centerboard, rudder",
    "type": "number",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length": {
    "type": "object",
    "title": "length",
    "description": "The various lengths of the vessel",
    "properties": {
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "overall": {
        "type": "number",
        "description": "Length overall",
        "units": "m"
      },
      "hull": {
        "type": "number",
        "description": "Length of hull",
        "units": "m"
      },
      "waterline": {
        "type": "number",
        "description": "Length at waterline",
        "units": "m"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/overall": {
    "type": "number",
    "description": "Length overall",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/hull": {
    "type": "number",
    "description": "Length of hull",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/length/waterline": {
    "type": "number",
    "description": "Length at waterline",
    "units": "m"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel": {
    "type": "object",
    "title": "keel",
    "description": "Information about the vessel's keel",
    "properties": {
      "type": {
        "type": "string",
        "description": "The type of keel.",
        "enum": [
          "long",
          "fin",
          "flare",
          "bulb",
          "wing",
          "centerboard",
          "kanting",
          "lifting",
          "daggerboard"
        ]
      },
      "angle": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "A number indicating at which angle the keel currently is (in case of a canting keel), negative to port.",
        "units": "rad"
      },
      "lift": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "In the case of a lifting keel, centreboard or daggerboard, the part of the keel which is extended. 0 is 'all the way up' and 1 is 'all the way down'. 0.8 would be 80% down.",
        "units": "ratio",
        "example": 0.8
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/type": {
    "type": "string",
    "description": "The type of keel.",
    "enum": [
      "long",
      "fin",
      "flare",
      "bulb",
      "wing",
      "centerboard",
      "kanting",
      "lifting",
      "daggerboard"
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/angle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/lift": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/keel/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/beam": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/airHeight": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging": {
    "type": "object",
    "title": "rigging",
    "description": "Information about the vessel's rigging",
    "properties": {
      "configuration": {
        "type": "string",
        "description": "The configuration of the rigging",
        "example": "sloop"
      },
      "masts": {
        "type": "number",
        "description": "The number of masts on the vessel."
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/configuration": {
    "type": "string",
    "description": "The configuration of the rigging",
    "example": "sloop"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/masts": {
    "type": "number",
    "description": "The number of masts on the vessel."
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/label": {
    "type": "string"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/design/rigging/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/sails.json#",
    "description": "An object describing the vessels sails if the vessel is a sailboat.",
    "title": "sails",
    "properties": {
      "inventory": {
        "type": "object",
        "description": "An object containing a description of each sail available to the vessel crew",
        "patternProperties": {
          "(^[a-zA-Z0-9]+$)": {
            "type": "object",
            "description": "'sail' data type.",
            "required": [
              "name",
              "type",
              "active",
              "area"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "An unique identifier by which the crew identifies a sail",
                "example": "J1"
              },
              "type": {
                "type": "string",
                "description": "The type of sail",
                "example": "Genaker"
              },
              "material": {
                "type": "string",
                "description": "The material the sail is made from (optional)",
                "example": "canvas"
              },
              "brand": {
                "type": "string",
                "description": "The brand of the sail (optional)",
                "example": "North Sails"
              },
              "active": {
                "type": "boolean",
                "description": "Indicates wether this sail is currently in use or not"
              },
              "area": {
                "type": "number",
                "description": "The total area of this sail in square meters",
                "units": "m2"
              },
              "minimumWind": {
                "type": "number",
                "description": "The minimum wind speed this sail can be used with",
                "units": "m/s",
                "default": 0
              },
              "maximumWind": {
                "type": "number",
                "description": "The maximum wind speed this sail can be used with",
                "units": "m/s",
                "default": 666
              },
              "timestamp": {
                "$ref": "#/definitions/timestamp"
              },
              "source": {
                "$ref": "#/definitions/source"
              },
              "_attr": {
                "$ref": "#/definitions/_attr"
              },
              "meta": {
                "$ref": "#/definitions/meta"
              }
            }
          }
        }
      },
      "area": {
        "type": "object",
        "description": "An object containing information about the vessels' sails.",
        "properties": {
          "total": {
            "description": "The total area of all sails on the vessel",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m2"
          },
          "active": {
            "description": "The total area of the sails currently in use on the vessel",
            "$ref": "../definitions.json#/definitions/numberValue",
            "units": "m2"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory": {
    "type": "object",
    "description": "An object containing a description of each sail available to the vessel crew",
    "patternProperties": {
      "(^[a-zA-Z0-9]+$)": {
        "type": "object",
        "description": "'sail' data type.",
        "required": [
          "name",
          "type",
          "active",
          "area"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "An unique identifier by which the crew identifies a sail",
            "example": "J1"
          },
          "type": {
            "type": "string",
            "description": "The type of sail",
            "example": "Genaker"
          },
          "material": {
            "type": "string",
            "description": "The material the sail is made from (optional)",
            "example": "canvas"
          },
          "brand": {
            "type": "string",
            "description": "The brand of the sail (optional)",
            "example": "North Sails"
          },
          "active": {
            "type": "boolean",
            "description": "Indicates wether this sail is currently in use or not"
          },
          "area": {
            "type": "number",
            "description": "The total area of this sail in square meters",
            "units": "m2"
          },
          "minimumWind": {
            "type": "number",
            "description": "The minimum wind speed this sail can be used with",
            "units": "m/s",
            "default": 0
          },
          "maximumWind": {
            "type": "number",
            "description": "The maximum wind speed this sail can be used with",
            "units": "m/s",
            "default": 666
          },
          "timestamp": {
            "$ref": "#/definitions/timestamp"
          },
          "source": {
            "$ref": "#/definitions/source"
          },
          "_attr": {
            "$ref": "#/definitions/_attr"
          },
          "meta": {
            "$ref": "#/definitions/meta"
          }
        }
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)": {
    "type": "object",
    "description": "'sail' data type.",
    "required": [
      "name",
      "type",
      "active",
      "area"
    ],
    "properties": {
      "name": {
        "type": "string",
        "description": "An unique identifier by which the crew identifies a sail",
        "example": "J1"
      },
      "type": {
        "type": "string",
        "description": "The type of sail",
        "example": "Genaker"
      },
      "material": {
        "type": "string",
        "description": "The material the sail is made from (optional)",
        "example": "canvas"
      },
      "brand": {
        "type": "string",
        "description": "The brand of the sail (optional)",
        "example": "North Sails"
      },
      "active": {
        "type": "boolean",
        "description": "Indicates wether this sail is currently in use or not"
      },
      "area": {
        "type": "number",
        "description": "The total area of this sail in square meters",
        "units": "m2"
      },
      "minimumWind": {
        "type": "number",
        "description": "The minimum wind speed this sail can be used with",
        "units": "m/s",
        "default": 0
      },
      "maximumWind": {
        "type": "number",
        "description": "The maximum wind speed this sail can be used with",
        "units": "m/s",
        "default": 666
      },
      "timestamp": {
        "$ref": "#/definitions/timestamp"
      },
      "source": {
        "$ref": "#/definitions/source"
      },
      "_attr": {
        "$ref": "#/definitions/_attr"
      },
      "meta": {
        "$ref": "#/definitions/meta"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/name": {
    "type": "string",
    "description": "An unique identifier by which the crew identifies a sail",
    "example": "J1"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/type": {
    "type": "string",
    "description": "The type of sail",
    "example": "Genaker"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/material": {
    "type": "string",
    "description": "The material the sail is made from (optional)",
    "example": "canvas"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/brand": {
    "type": "string",
    "description": "The brand of the sail (optional)",
    "example": "North Sails"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/active": {
    "type": "boolean",
    "description": "Indicates wether this sail is currently in use or not"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/area": {
    "type": "number",
    "description": "The total area of this sail in square meters",
    "units": "m2"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/minimumWind": {
    "type": "number",
    "description": "The minimum wind speed this sail can be used with",
    "units": "m/s",
    "default": 0
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/inventory/(^[a-zA-Z0-9]+$)/maximumWind": {
    "type": "number",
    "description": "The maximum wind speed this sail can be used with",
    "units": "m/s",
    "default": 666
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/area": {
    "type": "object",
    "description": "An object containing information about the vessels' sails.",
    "properties": {
      "total": {
        "description": "The total area of all sails on the vessel",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m2"
      },
      "active": {
        "description": "The total area of the sails currently in use on the vessel",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m2"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/area/total": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sails/area/active": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors": {
    "type": "object",
    "title": "sensors",
    "description": "Sensors, their state, and data.",
    "patternProperties": {
      "(^[A-Za-z0-9]+$)": {
        "description": "This regex pattern is used for validation UUID identifier for the sensor",
        "$ref": "groups/sensors.json#"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/sensors.json#",
    "description": "An object describing an individual sensor. It should be an object in vessel, named using a unique name or UUID",
    "title": "sensor",
    "properties": {
      "name": {
        "type": "string",
        "description": "The common name of the sensor"
      },
      "sensorType": {
        "type": "string",
        "description": "The datamodel definition of the sensor data. FIXME - need to create a definitions lib of sensor datamodel types"
      },
      "sensorData": {
        "type": "string",
        "description": "The data of the sensor data. FIXME - need to ref the definitions of sensor types"
      },
      "fromBow": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "The distance from the bow to the sensor location"
      },
      "fromCenter": {
        "$ref": "../definitions.json#/definitions/numberValue",
        "description": "The distance from the centerline to the sensor location, -ve to starboard, +ve to port"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)/name": {
    "type": "string",
    "description": "The common name of the sensor"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)/sensorType": {
    "type": "string",
    "description": "The datamodel definition of the sensor data. FIXME - need to create a definitions lib of sensor datamodel types"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)/sensorData": {
    "type": "string",
    "description": "The data of the sensor data. FIXME - need to ref the definitions of sensor types"
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)/fromBow": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/sensors/(^[A-Za-z0-9]+$)/fromCenter": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/performance.json#",
    "description": "Schema describing the performance child-object of a Vessel.",
    "title": "performance",
    "properties": {
      "polarSpeed": {
        "description": "The current polar speed based on current polar diagram, trueWindSpeed and truewindAngle.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "polarSpeedRatio": {
        "description": "The ratio of current speed through water to the polar speed.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "ratio"
      },
      "velocityMadeGood": {
        "description": "The current velocity made good derived from the speed through water and appearant wind angle. A positive value is heading to upwind, negative to downwind.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "velocityMadeGoodToWaypoint": {
        "description": "The current velocity made good to the next waypoint derived from the speedOverGround, courseOverGround.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "beatAngle": {
        "description": "The true wind beat angle for the best velocity made good based on current current polar diagram and trueWindSpeed.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "beatAngleVelocityMadeGood": {
        "description": "The velocity made good for the beat angle.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "beatAngleTargetSpeed": {
        "description": "The target speed for the beat angle.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "gybeAngle": {
        "description": "The true wind gybe angle for the best velocity made good downwind based on current polar diagram and trueWindSpeed.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "gybeAngleVelocityMadeGood": {
        "description": "The velocity made good for the gybe angle",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "gybeAngleTargetSpeed": {
        "description": "The target speed for the gybe angle.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "targetAngle": {
        "description": "The true wind gybe or beat angle for the best velocity made good downwind or upwind based on current polar diagram and trueWindSpeed.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "targetSpeed": {
        "description": "The target speed for the beat angle or gybe angle, which ever is applicable.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "m/s"
      },
      "leeway": {
        "description": "Current leeway",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "tackMagnetic": {
        "description": "Magnetic heading on opposite tack.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      },
      "tackTrue": {
        "description": "True heading on opposite tack.",
        "$ref": "../definitions.json#/definitions/numberValue",
        "units": "rad"
      }
    }
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/polarSpeed": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/polarSpeedRatio": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/velocityMadeGood": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/velocityMadeGoodToWaypoint": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/beatAngle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/beatAngleVelocityMadeGood": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/beatAngleTargetSpeed": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/gybeAngle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/gybeAngleVelocityMadeGood": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/gybeAngleTargetSpeed": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/targetAngle": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/targetSpeed": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/leeway": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/tackMagnetic": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/vessels/(^urn:mrn:(imo|signalk):(mmsi:[2-7][0-9]{8,8}|uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}))|^(http(s?):.*|mailto:.*|tel:(\\+?)[0-9]{4,})$/performance/tackTrue": {
    "type": "object",
    "description": "Data should be of type number.",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "value": {
            "type": "number"
          },
          "values": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "$ref": "#/definitions/valuesNumberValue"
              }
            }
          }
        }
      }
    ]
  },
  "/sources": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/sources.json#",
    "title": "sources",
    "description": "Metadata about the sources, eg. buses and connected sensors",
    "patternProperties": {
      ".*": {
        "type": "object",
        "patternProperties": {
          ".*": {
            "anyOf": [
              {
                "properties": {
                  "talker": {
                    "type": "string"
                  },
                  "sentences": {
                    "type": "object",
                    "patternProperties": {
                      "^[A-Z][A-Z][A-Z]$": {
                        "$ref": "#/definitions/timestamp"
                      }
                    }
                  },
                  "n2k": {
                    "type": "object",
                    "properties": {
                      "src": {
                        "type": "string"
                      },
                      "pgns": {
                        "type": "object",
                        "patternProperties": {
                          "[0-9]*": {
                            "$ref": "#/definitions/timestamp"
                          }
                        }
                      },
                      "uniqueId": {
                        "type": "string",
                        "description": "Unique id of the source device"
                      },
                      "deviceFunction": {
                        "type": "number",
                        "description": "NMEA 2000 Device Function code"
                      },
                      "deviceClass": {
                        "type": "number",
                        "description": "NMEA 2000 Device Class code"
                      }
                    }
                  },
                  "manufacturer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "Manufacturer numeric NMEA 2000 id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Manufacturer name"
                      },
                      "productId": {
                        "type": "string"
                      },
                      "modelId": {
                        "type": "string"
                      },
                      "softwareVersion": {
                        "type": "string"
                      },
                      "hardwareVersion": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              {
                "patternProperties": {
                  ".*": {
                    "properties": {}
                  }
                }
              }
            ]
          }
        },
        "properties": {
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "productFunction": {
            "type": "number"
          },
          "productClass": {
            "type": "number"
          },
          "productCode": {
            "type": "number"
          },
          "productName": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          },
          "hardwareVersion": {
            "type": "string"
          },
          "serialNo": {
            "type": "string"
          },
          "installationNote1": {
            "type": "string"
          },
          "installationNote2": {
            "type": "string"
          },
          "manufacturerInfo": {
            "type": "string"
          }
        }
      }
    }
  },
  "/sources/.*": {
    "type": "object",
    "patternProperties": {
      ".*": {
        "anyOf": [
          {
            "properties": {
              "talker": {
                "type": "string"
              },
              "sentences": {
                "type": "object",
                "patternProperties": {
                  "^[A-Z][A-Z][A-Z]$": {
                    "$ref": "#/definitions/timestamp"
                  }
                }
              },
              "n2k": {
                "type": "object",
                "properties": {
                  "src": {
                    "type": "string"
                  },
                  "pgns": {
                    "type": "object",
                    "patternProperties": {
                      "[0-9]*": {
                        "$ref": "#/definitions/timestamp"
                      }
                    }
                  },
                  "uniqueId": {
                    "type": "string",
                    "description": "Unique id of the source device"
                  },
                  "deviceFunction": {
                    "type": "number",
                    "description": "NMEA 2000 Device Function code"
                  },
                  "deviceClass": {
                    "type": "number",
                    "description": "NMEA 2000 Device Class code"
                  }
                }
              },
              "manufacturer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "Manufacturer numeric NMEA 2000 id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Manufacturer name"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "softwareVersion": {
                    "type": "string"
                  },
                  "hardwareVersion": {
                    "type": "string"
                  },
                  "serialNumber": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "patternProperties": {
              ".*": {
                "properties": {}
              }
            }
          }
        ]
      }
    },
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string"
      },
      "manufacturer": {
        "type": "string"
      },
      "productFunction": {
        "type": "number"
      },
      "productClass": {
        "type": "number"
      },
      "productCode": {
        "type": "number"
      },
      "productName": {
        "type": "string"
      },
      "softwareVersion": {
        "type": "string"
      },
      "hardwareVersion": {
        "type": "string"
      },
      "serialNo": {
        "type": "string"
      },
      "installationNote1": {
        "type": "string"
      },
      "installationNote2": {
        "type": "string"
      },
      "manufacturerInfo": {
        "type": "string"
      }
    }
  },
  "/sources/.*/label": {
    "type": "string"
  },
  "/sources/.*/type": {
    "type": "string"
  },
  "/sources/.*/manufacturer": {
    "type": "string"
  },
  "/sources/.*/productFunction": {
    "type": "number"
  },
  "/sources/.*/productClass": {
    "type": "number"
  },
  "/sources/.*/productCode": {
    "type": "number"
  },
  "/sources/.*/productName": {
    "type": "string"
  },
  "/sources/.*/softwareVersion": {
    "type": "string"
  },
  "/sources/.*/hardwareVersion": {
    "type": "string"
  },
  "/sources/.*/serialNo": {
    "type": "string"
  },
  "/sources/.*/installationNote1": {
    "type": "string"
  },
  "/sources/.*/installationNote2": {
    "type": "string"
  },
  "/sources/.*/manufacturerInfo": {
    "type": "string"
  },
  "/sources/.*/.*": {
    "anyOf": [
      {
        "properties": {
          "talker": {
            "type": "string"
          },
          "sentences": {
            "type": "object",
            "patternProperties": {
              "^[A-Z][A-Z][A-Z]$": {
                "$ref": "#/definitions/timestamp"
              }
            }
          },
          "n2k": {
            "type": "object",
            "properties": {
              "src": {
                "type": "string"
              },
              "pgns": {
                "type": "object",
                "patternProperties": {
                  "[0-9]*": {
                    "$ref": "#/definitions/timestamp"
                  }
                }
              },
              "uniqueId": {
                "type": "string",
                "description": "Unique id of the source device"
              },
              "deviceFunction": {
                "type": "number",
                "description": "NMEA 2000 Device Function code"
              },
              "deviceClass": {
                "type": "number",
                "description": "NMEA 2000 Device Class code"
              }
            }
          },
          "manufacturer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Manufacturer numeric NMEA 2000 id"
              },
              "name": {
                "type": "string",
                "description": "Manufacturer name"
              },
              "productId": {
                "type": "string"
              },
              "modelId": {
                "type": "string"
              },
              "softwareVersion": {
                "type": "string"
              },
              "hardwareVersion": {
                "type": "string"
              },
              "serialNumber": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "patternProperties": {
          ".*": {
            "properties": {}
          }
        }
      }
    ]
  },
  "/resources": {
    "type": "object",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://signalk.github.io/specification/schemas/groups/resources.json#",
    "title": "resources",
    "description": "Resources to aid in navigation and operation of the vessel",
    "properties": {
      "charts": {
        "type": "object",
        "title": "chart",
        "description": "A holder for charts, each named with their chart code",
        "patternProperties": {
          "(^[A-Za-z0-9_-]{8,}$)": {
            "type": "object",
            "description": "A chart",
            "properties": {
              "name": {
                "type": "string",
                "description": "Chart common name"
              },
              "identifier": {
                "type": "string",
                "description": "Chart number"
              },
              "description": {
                "type": "string",
                "description": "A description of the chart"
              },
              "tilemapUrl": {
                "type": "string",
                "description": "A url to the tilemap of the chart for use in TMS chartplotting apps"
              },
              "region": {
                "type": "string",
                "description": "Region related to note. A pointer to a region UUID. Alternative to geohash"
              },
              "geohash": {
                "description": "Position related to chart. Alternative to region",
                "$ref": "../definitions.json#/definitions/geohash"
              },
              "chartUrl": {
                "type": "string",
                "description": "A url to the chart file's storage location"
              },
              "chartFormat": {
                "type": "string",
                "description": "The format of the chart",
                "enum": [
                  "gif",
                  "geotiff",
                  "kap",
                  "png",
                  "jpg",
                  "kml",
                  "wkt",
                  "topojson",
                  "geojson",
                  "gpx"
                ]
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              }
            }
          }
        }
      },
      "routes": {
        "type": "object",
        "title": "route",
        "description": "A holder for routes, each named with a UUID",
        "patternProperties": {
          "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
            "type": "object",
            "description": "A route, named with a UUID",
            "properties": {
              "name": {
                "type": "string",
                "description": "Route's common name"
              },
              "description": {
                "type": "string",
                "description": "A description of the route"
              },
              "distance": {
                "description": "Total distance from start to end",
                "type": "number",
                "units": "m"
              },
              "start": {
                "type": "string",
                "description": "The waypoint UUID at the start of the route"
              },
              "end": {
                "type": "string",
                "description": "The waypoint UUID at the end of the route"
              },
              "feature": {
                "title": "Feature",
                "description": "A Geo JSON feature object",
                "required": [
                  "geometry",
                  "properties"
                ],
                "properties": {
                  "type": {
                    "enum": [
                      "Feature"
                    ]
                  },
                  "geometry": {
                    "title": "LineString",
                    "properties": {
                      "type": {
                        "enum": [
                          "LineString"
                        ]
                      },
                      "coordinates": {
                        "$ref": "#/definitions/lineString"
                      }
                    }
                  },
                  "properties": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "description": "Additional data of any type",
                    "additionalProperties": true
                  },
                  "id": {
                    "FIXME": "may be there, type not known (string? number?)"
                  }
                }
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              }
            }
          }
        }
      },
      "notes": {
        "type": "object",
        "title": "notes",
        "description": "A holder for notes about regions, each named with a UUID. Notes might include navigation or cruising info, images, or anything",
        "patternProperties": {
          "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
            "type": "object",
            "description": "A note about a region, named with a UUID. Notes might include navigation or cruising info, images, or anything",
            "properties": {
              "title": {
                "type": "string",
                "description": "Note's common name"
              },
              "description": {
                "type": "string",
                "description": "A textual description of the note"
              },
              "region": {
                "type": "string",
                "description": "Region related to note. A pointer to a region UUID. Alternative to position or geohash"
              },
              "position": {
                "description": "Position related to note. Alternative to region or geohash",
                "$ref": "../definitions.json#/definitions/position"
              },
              "geohash": {
                "description": "Position related to note. Alternative to region or position",
                "$ref": "../definitions.json#/definitions/geohash"
              },
              "mimeType": {
                "type": "string",
                "description": "MIME type of the note"
              },
              "url": {
                "type": "string",
                "description": "Location of the note"
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              }
            }
          }
        }
      },
      "regions": {
        "type": "object",
        "title": "region",
        "description": "A holder for regions, each named with UUID",
        "patternProperties": {
          "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
            "type": "object",
            "description": "A region of interest, each named with a UUID",
            "properties": {
              "geohash": {
                "description": "geohash of the approximate boundary of this region",
                "$ref:": "../definitions.json#/definitions/geohash"
              },
              "feature": {
                "title": "Feature",
                "description": "A Geo JSON feature object",
                "required": [
                  "geometry",
                  "properties"
                ],
                "properties": {
                  "type": {
                    "enum": [
                      "Feature"
                    ]
                  },
                  "geometry": {
                    "oneOf": [
                      {
                        "title": "Polygon",
                        "properties": {
                          "type": {
                            "enum": [
                              "Polygon"
                            ]
                          },
                          "coordinates": {
                            "$ref": "#/definitions/polygon"
                          }
                        }
                      },
                      {
                        "title": "MultiPolygon",
                        "properties": {
                          "type": {
                            "enum": [
                              "MultiPolygon"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/polygon"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "properties": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "description": "Additional data of any type",
                    "additionalProperties": true
                  },
                  "id": {
                    "FIXME": "may be there, type not known (string? number?)"
                  }
                }
              },
              "timestamp": {
                "description": "timestamp of the last update to this data",
                "$ref": "../definitions.json#/definitions/timestamp"
              },
              "source": {
                "description": "Source of this data",
                "$ref": "../definitions.json#/definitions/source"
              }
            }
          }
        }
      },
      "waypoints": {
        "type": "object",
        "title": "waypoints",
        "description": "A holder for waypoints, each named with a UUID",
        "patternProperties": {
          "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
            "description": "A waypoint, named with a UUID",
            "$ref": "../definitions.json#/definitions/waypoint"
          }
        }
      }
    }
  },
  "/resources/charts": {
    "type": "object",
    "title": "chart",
    "description": "A holder for charts, each named with their chart code",
    "patternProperties": {
      "(^[A-Za-z0-9_-]{8,}$)": {
        "type": "object",
        "description": "A chart",
        "properties": {
          "name": {
            "type": "string",
            "description": "Chart common name"
          },
          "identifier": {
            "type": "string",
            "description": "Chart number"
          },
          "description": {
            "type": "string",
            "description": "A description of the chart"
          },
          "tilemapUrl": {
            "type": "string",
            "description": "A url to the tilemap of the chart for use in TMS chartplotting apps"
          },
          "region": {
            "type": "string",
            "description": "Region related to note. A pointer to a region UUID. Alternative to geohash"
          },
          "geohash": {
            "description": "Position related to chart. Alternative to region",
            "$ref": "../definitions.json#/definitions/geohash"
          },
          "chartUrl": {
            "type": "string",
            "description": "A url to the chart file's storage location"
          },
          "chartFormat": {
            "type": "string",
            "description": "The format of the chart",
            "enum": [
              "gif",
              "geotiff",
              "kap",
              "png",
              "jpg",
              "kml",
              "wkt",
              "topojson",
              "geojson",
              "gpx"
            ]
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      }
    }
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)": {
    "type": "object",
    "description": "A chart",
    "properties": {
      "name": {
        "type": "string",
        "description": "Chart common name"
      },
      "identifier": {
        "type": "string",
        "description": "Chart number"
      },
      "description": {
        "type": "string",
        "description": "A description of the chart"
      },
      "tilemapUrl": {
        "type": "string",
        "description": "A url to the tilemap of the chart for use in TMS chartplotting apps"
      },
      "region": {
        "type": "string",
        "description": "Region related to note. A pointer to a region UUID. Alternative to geohash"
      },
      "geohash": {
        "description": "Position related to chart. Alternative to region",
        "$ref": "../definitions.json#/definitions/geohash"
      },
      "chartUrl": {
        "type": "string",
        "description": "A url to the chart file's storage location"
      },
      "chartFormat": {
        "type": "string",
        "description": "The format of the chart",
        "enum": [
          "gif",
          "geotiff",
          "kap",
          "png",
          "jpg",
          "kml",
          "wkt",
          "topojson",
          "geojson",
          "gpx"
        ]
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/name": {
    "type": "string",
    "description": "Chart common name"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/identifier": {
    "type": "string",
    "description": "Chart number"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/description": {
    "type": "string",
    "description": "A description of the chart"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/tilemapUrl": {
    "type": "string",
    "description": "A url to the tilemap of the chart for use in TMS chartplotting apps"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/region": {
    "type": "string",
    "description": "Region related to note. A pointer to a region UUID. Alternative to geohash"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/geohash": {
    "type": "string",
    "description": "A geohash (see http://geohash.org)",
    "pattern": "^[0-9A-Za-z:]{1,}$",
    "example": "eg rbe:TasmanBay"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/chartUrl": {
    "type": "string",
    "description": "A url to the chart file's storage location"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/chartFormat": {
    "type": "string",
    "description": "The format of the chart",
    "enum": [
      "gif",
      "geotiff",
      "kap",
      "png",
      "jpg",
      "kml",
      "wkt",
      "topojson",
      "geojson",
      "gpx"
    ]
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/label": {
    "type": "string"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/resources/charts/(^[A-Za-z0-9_-]{8,}$)/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/resources/routes": {
    "type": "object",
    "title": "route",
    "description": "A holder for routes, each named with a UUID",
    "patternProperties": {
      "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
        "type": "object",
        "description": "A route, named with a UUID",
        "properties": {
          "name": {
            "type": "string",
            "description": "Route's common name"
          },
          "description": {
            "type": "string",
            "description": "A description of the route"
          },
          "distance": {
            "description": "Total distance from start to end",
            "type": "number",
            "units": "m"
          },
          "start": {
            "type": "string",
            "description": "The waypoint UUID at the start of the route"
          },
          "end": {
            "type": "string",
            "description": "The waypoint UUID at the end of the route"
          },
          "feature": {
            "title": "Feature",
            "description": "A Geo JSON feature object",
            "required": [
              "geometry",
              "properties"
            ],
            "properties": {
              "type": {
                "enum": [
                  "Feature"
                ]
              },
              "geometry": {
                "title": "LineString",
                "properties": {
                  "type": {
                    "enum": [
                      "LineString"
                    ]
                  },
                  "coordinates": {
                    "$ref": "#/definitions/lineString"
                  }
                }
              },
              "properties": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "Additional data of any type",
                "additionalProperties": true
              },
              "id": {
                "FIXME": "may be there, type not known (string? number?)"
              }
            }
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      }
    }
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
    "type": "object",
    "description": "A route, named with a UUID",
    "properties": {
      "name": {
        "type": "string",
        "description": "Route's common name"
      },
      "description": {
        "type": "string",
        "description": "A description of the route"
      },
      "distance": {
        "description": "Total distance from start to end",
        "type": "number",
        "units": "m"
      },
      "start": {
        "type": "string",
        "description": "The waypoint UUID at the start of the route"
      },
      "end": {
        "type": "string",
        "description": "The waypoint UUID at the end of the route"
      },
      "feature": {
        "title": "Feature",
        "description": "A Geo JSON feature object",
        "required": [
          "geometry",
          "properties"
        ],
        "properties": {
          "type": {
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "title": "LineString",
            "properties": {
              "type": {
                "enum": [
                  "LineString"
                ]
              },
              "coordinates": {
                "$ref": "#/definitions/lineString"
              }
            }
          },
          "properties": {
            "type": [
              "object",
              "null"
            ],
            "description": "Additional data of any type",
            "additionalProperties": true
          },
          "id": {
            "FIXME": "may be there, type not known (string? number?)"
          }
        }
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/name": {
    "type": "string",
    "description": "Route's common name"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/description": {
    "type": "string",
    "description": "A description of the route"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/distance": {
    "description": "Total distance from start to end",
    "type": "number",
    "units": "m"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/start": {
    "type": "string",
    "description": "The waypoint UUID at the start of the route"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/end": {
    "type": "string",
    "description": "The waypoint UUID at the end of the route"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature": {
    "title": "Feature",
    "description": "A Geo JSON feature object",
    "required": [
      "geometry",
      "properties"
    ],
    "properties": {
      "type": {
        "enum": [
          "Feature"
        ]
      },
      "geometry": {
        "title": "LineString",
        "properties": {
          "type": {
            "enum": [
              "LineString"
            ]
          },
          "coordinates": {
            "$ref": "#/definitions/lineString"
          }
        }
      },
      "properties": {
        "type": [
          "object",
          "null"
        ],
        "description": "Additional data of any type",
        "additionalProperties": true
      },
      "id": {
        "FIXME": "may be there, type not known (string? number?)"
      }
    }
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/type": {
    "enum": [
      "Feature"
    ]
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry": {
    "title": "LineString",
    "properties": {
      "type": {
        "enum": [
          "LineString"
        ]
      },
      "coordinates": {
        "$ref": "#/definitions/lineString"
      }
    }
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry/type": {
    "enum": [
      "LineString"
    ]
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/properties": {
    "type": [
      "object",
      "null"
    ],
    "description": "Additional data of any type",
    "additionalProperties": true
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/id": {
    "FIXME": "may be there, type not known (string? number?)"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/label": {
    "type": "string"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/resources/routes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/resources/notes": {
    "type": "object",
    "title": "notes",
    "description": "A holder for notes about regions, each named with a UUID. Notes might include navigation or cruising info, images, or anything",
    "patternProperties": {
      "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
        "type": "object",
        "description": "A note about a region, named with a UUID. Notes might include navigation or cruising info, images, or anything",
        "properties": {
          "title": {
            "type": "string",
            "description": "Note's common name"
          },
          "description": {
            "type": "string",
            "description": "A textual description of the note"
          },
          "region": {
            "type": "string",
            "description": "Region related to note. A pointer to a region UUID. Alternative to position or geohash"
          },
          "position": {
            "description": "Position related to note. Alternative to region or geohash",
            "$ref": "../definitions.json#/definitions/position"
          },
          "geohash": {
            "description": "Position related to note. Alternative to region or position",
            "$ref": "../definitions.json#/definitions/geohash"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the note"
          },
          "url": {
            "type": "string",
            "description": "Location of the note"
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      }
    }
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
    "type": "object",
    "description": "A note about a region, named with a UUID. Notes might include navigation or cruising info, images, or anything",
    "properties": {
      "title": {
        "type": "string",
        "description": "Note's common name"
      },
      "description": {
        "type": "string",
        "description": "A textual description of the note"
      },
      "region": {
        "type": "string",
        "description": "Region related to note. A pointer to a region UUID. Alternative to position or geohash"
      },
      "position": {
        "description": "Position related to note. Alternative to region or geohash",
        "$ref": "../definitions.json#/definitions/position"
      },
      "geohash": {
        "description": "Position related to note. Alternative to region or position",
        "$ref": "../definitions.json#/definitions/geohash"
      },
      "mimeType": {
        "type": "string",
        "description": "MIME type of the note"
      },
      "url": {
        "type": "string",
        "description": "Location of the note"
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/title": {
    "type": "string",
    "description": "Note's common name"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/description": {
    "type": "string",
    "description": "A textual description of the note"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/region": {
    "type": "string",
    "description": "Region related to note. A pointer to a region UUID. Alternative to position or geohash"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/position": {
    "type": "object",
    "title": "position",
    "description": "The position in 3 dimensions",
    "allOf": [
      {
        "$ref": "#/definitions/commonValueFields"
      },
      {
        "properties": {
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "units": "deg",
            "example": 4.98765245
          },
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "units": "deg",
            "example": 52.0987654
          },
          "altitude": {
            "type": "number",
            "description": "Altitude",
            "units": "m"
          }
        }
      }
    ]
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/geohash": {
    "type": "string",
    "description": "A geohash (see http://geohash.org)",
    "pattern": "^[0-9A-Za-z:]{1,}$",
    "example": "eg rbe:TasmanBay"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/mimeType": {
    "type": "string",
    "description": "MIME type of the note"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/url": {
    "type": "string",
    "description": "Location of the note"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/label": {
    "type": "string"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/resources/notes/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/resources/regions": {
    "type": "object",
    "title": "region",
    "description": "A holder for regions, each named with UUID",
    "patternProperties": {
      "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
        "type": "object",
        "description": "A region of interest, each named with a UUID",
        "properties": {
          "geohash": {
            "description": "geohash of the approximate boundary of this region",
            "$ref:": "../definitions.json#/definitions/geohash"
          },
          "feature": {
            "title": "Feature",
            "description": "A Geo JSON feature object",
            "required": [
              "geometry",
              "properties"
            ],
            "properties": {
              "type": {
                "enum": [
                  "Feature"
                ]
              },
              "geometry": {
                "oneOf": [
                  {
                    "title": "Polygon",
                    "properties": {
                      "type": {
                        "enum": [
                          "Polygon"
                        ]
                      },
                      "coordinates": {
                        "$ref": "#/definitions/polygon"
                      }
                    }
                  },
                  {
                    "title": "MultiPolygon",
                    "properties": {
                      "type": {
                        "enum": [
                          "MultiPolygon"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/polygon"
                        }
                      }
                    }
                  }
                ]
              },
              "properties": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "Additional data of any type",
                "additionalProperties": true
              },
              "id": {
                "FIXME": "may be there, type not known (string? number?)"
              }
            }
          },
          "timestamp": {
            "description": "timestamp of the last update to this data",
            "$ref": "../definitions.json#/definitions/timestamp"
          },
          "source": {
            "description": "Source of this data",
            "$ref": "../definitions.json#/definitions/source"
          }
        }
      }
    }
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
    "type": "object",
    "description": "A region of interest, each named with a UUID",
    "properties": {
      "geohash": {
        "description": "geohash of the approximate boundary of this region",
        "$ref:": "../definitions.json#/definitions/geohash"
      },
      "feature": {
        "title": "Feature",
        "description": "A Geo JSON feature object",
        "required": [
          "geometry",
          "properties"
        ],
        "properties": {
          "type": {
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "oneOf": [
              {
                "title": "Polygon",
                "properties": {
                  "type": {
                    "enum": [
                      "Polygon"
                    ]
                  },
                  "coordinates": {
                    "$ref": "#/definitions/polygon"
                  }
                }
              },
              {
                "title": "MultiPolygon",
                "properties": {
                  "type": {
                    "enum": [
                      "MultiPolygon"
                    ]
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/polygon"
                    }
                  }
                }
              }
            ]
          },
          "properties": {
            "type": [
              "object",
              "null"
            ],
            "description": "Additional data of any type",
            "additionalProperties": true
          },
          "id": {
            "FIXME": "may be there, type not known (string? number?)"
          }
        }
      },
      "timestamp": {
        "description": "timestamp of the last update to this data",
        "$ref": "../definitions.json#/definitions/timestamp"
      },
      "source": {
        "description": "Source of this data",
        "$ref": "../definitions.json#/definitions/source"
      }
    }
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/geohash": {
    "description": "geohash of the approximate boundary of this region",
    "$ref:": "../definitions.json#/definitions/geohash"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature": {
    "title": "Feature",
    "description": "A Geo JSON feature object",
    "required": [
      "geometry",
      "properties"
    ],
    "properties": {
      "type": {
        "enum": [
          "Feature"
        ]
      },
      "geometry": {
        "oneOf": [
          {
            "title": "Polygon",
            "properties": {
              "type": {
                "enum": [
                  "Polygon"
                ]
              },
              "coordinates": {
                "$ref": "#/definitions/polygon"
              }
            }
          },
          {
            "title": "MultiPolygon",
            "properties": {
              "type": {
                "enum": [
                  "MultiPolygon"
                ]
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/polygon"
                }
              }
            }
          }
        ]
      },
      "properties": {
        "type": [
          "object",
          "null"
        ],
        "description": "Additional data of any type",
        "additionalProperties": true
      },
      "id": {
        "FIXME": "may be there, type not known (string? number?)"
      }
    }
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/type": {
    "enum": [
      "Feature"
    ]
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry": {
    "oneOf": [
      {
        "title": "Polygon",
        "properties": {
          "type": {
            "enum": [
              "Polygon"
            ]
          },
          "coordinates": {
            "$ref": "#/definitions/polygon"
          }
        }
      },
      {
        "title": "MultiPolygon",
        "properties": {
          "type": {
            "enum": [
              "MultiPolygon"
            ]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/polygon"
            }
          }
        }
      }
    ]
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/properties": {
    "type": [
      "object",
      "null"
    ],
    "description": "Additional data of any type",
    "additionalProperties": true
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/id": {
    "FIXME": "may be there, type not known (string? number?)"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/timestamp": {
    "type": "string",
    "description": "ISO-8601 (UTC) string representing date and time.",
    "units": "ISO-8601 (UTC)",
    "example": "2014-04-10T08:33:53Z"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source": {
    "type": "object",
    "description": "Source of data. An object containing at least the properties defined in 'properties', but can contain anything beyond that.",
    "required": [
      "label",
      "type"
    ],
    "properties": {
      "label": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "default": "NMEA2000"
      },
      "src": {
        "type": "string",
        "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
      },
      "pgn": {
        "type": "number",
        "description": "NMEA2000 pgn of the source message"
      },
      "sentence": {
        "type": "string",
        "description": "Sentence type of the source NMEA0183 sentence"
      },
      "talker": {
        "type": "string",
        "description": "Talker id of the source NMEA0183 sentence"
      }
    }
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/label": {
    "type": "string"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/type": {
    "type": "string",
    "default": "NMEA2000"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/src": {
    "type": "string",
    "description": "NMEA2000 src value or any similar value for encapsulating the original source of the data"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/pgn": {
    "type": "number",
    "description": "NMEA2000 pgn of the source message"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/sentence": {
    "type": "string",
    "description": "Sentence type of the source NMEA0183 sentence"
  },
  "/resources/regions/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/source/talker": {
    "type": "string",
    "description": "Talker id of the source NMEA0183 sentence"
  },
  "/resources/waypoints": {
    "type": "object",
    "title": "waypoints",
    "description": "A holder for waypoints, each named with a UUID",
    "patternProperties": {
      "^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
        "description": "A waypoint, named with a UUID",
        "$ref": "../definitions.json#/definitions/waypoint"
      }
    }
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$": {
    "type": "object",
    "description": "A waypoint, an object with a signal k position object, and GeoJSON Feature object (see geojson.org, and https://github.com/fge/sample-json-schemas/tree/master/geojson)",
    "properties": {
      "position": {
        "$ref": "#/definitions/position"
      },
      "feature": {
        "title": "Feature",
        "description": "A Geo JSON feature object",
        "required": [
          "geometry",
          "properties"
        ],
        "properties": {
          "type": {
            "enum": [
              "Feature"
            ]
          },
          "geometry": {
            "title": "Point",
            "properties": {
              "type": {
                "enum": [
                  "Point"
                ]
              },
              "coordinates": {
                "description": "A single position, in x,y order (Lon, Lat)",
                "type": "array",
                "minItems": 2,
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "additionalItems": false
              }
            }
          },
          "properties": {
            "type": [
              "object",
              "null"
            ],
            "description": "Additional data of any type",
            "additionalProperties": true
          },
          "id": {
            "FIXME": "may be there, type not known (string? number?)"
          }
        }
      }
    }
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature": {
    "title": "Feature",
    "description": "A Geo JSON feature object",
    "required": [
      "geometry",
      "properties"
    ],
    "properties": {
      "type": {
        "enum": [
          "Feature"
        ]
      },
      "geometry": {
        "title": "Point",
        "properties": {
          "type": {
            "enum": [
              "Point"
            ]
          },
          "coordinates": {
            "description": "A single position, in x,y order (Lon, Lat)",
            "type": "array",
            "minItems": 2,
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ],
            "additionalItems": false
          }
        }
      },
      "properties": {
        "type": [
          "object",
          "null"
        ],
        "description": "Additional data of any type",
        "additionalProperties": true
      },
      "id": {
        "FIXME": "may be there, type not known (string? number?)"
      }
    }
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/type": {
    "enum": [
      "Feature"
    ]
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry": {
    "title": "Point",
    "properties": {
      "type": {
        "enum": [
          "Point"
        ]
      },
      "coordinates": {
        "description": "A single position, in x,y order (Lon, Lat)",
        "type": "array",
        "minItems": 2,
        "items": [
          {
            "type": "number"
          },
          {
            "type": "number"
          }
        ],
        "additionalItems": false
      }
    }
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry/type": {
    "enum": [
      "Point"
    ]
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/geometry/coordinates": {
    "description": "A single position, in x,y order (Lon, Lat)",
    "type": "array",
    "minItems": 2,
    "items": [
      {
        "type": "number"
      },
      {
        "type": "number"
      }
    ],
    "additionalItems": false
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/properties": {
    "type": [
      "object",
      "null"
    ],
    "description": "Additional data of any type",
    "additionalProperties": true
  },
  "/resources/waypoints/^urn:mrn:signalk:uuid:[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$/feature/id": {
    "FIXME": "may be there, type not known (string? number?)"
  },
  "/version": {
    "type": "string",
    "description": "Version of the Signal K root object.",
    "example": "1.0"
  }
}