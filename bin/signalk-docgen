#!/usr/bin/env node

'use strict'

/*
 * Copyright 2016 Fabian Tollenaar <fabian@decipher.industries>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

const Parser = require('../lib/Parser')
const path = require('path')
const argv = require('minimist')(process.argv.slice(2))

let schema = path.join(__dirname, '../schema')
let output = path.join(process.cwd(), './build')
let debug = false

if (typeof argv.s === 'string' && argv.s.trim().length > 0) {
  schema = argv.s
}

if (typeof argv.schema === 'string' && argv.schema.trim().length > 0) {
  schema = argv.schema
}

if (typeof argv.o === 'string' && argv.o.trim().length > 0) {
  output = argv.o
}

if (typeof argv.output === 'string' && argv.output.trim().length > 0) {
  output = argv.output
}

if (typeof argv.debug !== 'undefined') {
  debug = true
}

let definitions = path.join(schema, 'definitions.json')
let entry = path.join(schema, 'signalk.json')

new Parser({ definitions, entry, output, debug })
